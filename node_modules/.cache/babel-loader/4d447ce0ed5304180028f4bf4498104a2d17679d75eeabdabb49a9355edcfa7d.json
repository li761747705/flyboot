{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { ref, computed, onMounted, watch } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { SUPPORTED_LOCALES, setLocale } from '@/i18n';\nexport default {\n  name: 'LanguageSwitcher',\n  setup() {\n    const {\n      locale\n    } = useI18n();\n    const currentLocale = computed(() => locale.value);\n    const supportedLocales = ref(SUPPORTED_LOCALES);\n\n    // 切换语言\n    const changeLocale = code => {\n      if (code !== currentLocale.value) {\n        locale.value = code;\n        setLocale(code);\n\n        // 保存到本地存储\n        localStorage.setItem('locale', code);\n\n        // 更新HTML文档的lang和dir属性\n        document.documentElement.setAttribute('lang', code);\n        if (code === 'ar') {\n          document.documentElement.setAttribute('dir', 'rtl');\n          document.body.classList.add('rtl');\n        } else {\n          document.documentElement.setAttribute('dir', 'ltr');\n          document.body.classList.remove('rtl');\n        }\n      }\n    };\n\n    // 获取当前语言名称\n    const getCurrentLanguageName = () => {\n      const current = supportedLocales.value.find(l => l.code === currentLocale.value);\n      return current ? current.name : '语言';\n    };\n\n    // 监听locale变化，确保所有组件都响应语言变化\n    watch(locale, newLocale => {\n      if (newLocale !== localStorage.getItem('locale')) {\n        setLocale(newLocale);\n      }\n    });\n\n    // 组件挂载时确保语言设置正确\n    onMounted(() => {\n      const savedLocale = localStorage.getItem('locale') || 'zh-CN';\n      if (locale.value !== savedLocale) {\n        locale.value = savedLocale;\n        setLocale(savedLocale);\n      }\n    });\n    return {\n      currentLocale,\n      supportedLocales,\n      changeLocale,\n      getCurrentLanguageName\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","useI18n","SUPPORTED_LOCALES","setLocale","name","setup","locale","currentLocale","value","supportedLocales","changeLocale","code","localStorage","setItem","document","documentElement","setAttribute","body","classList","add","remove","getCurrentLanguageName","current","find","l","newLocale","getItem","savedLocale"],"sources":["C:\\Users\\Administrator\\Desktop\\flyboot\\src\\components\\LanguageSwitcher.vue"],"sourcesContent":["<template>\r\n  <div class=\"language-switcher\">\r\n    <div class=\"dropdown\">\r\n      <button \r\n        class=\"btn btn-link dropdown-toggle text-decoration-none text-white\" \r\n        type=\"button\" \r\n        id=\"languageDropdown\" \r\n        data-bs-toggle=\"dropdown\" \r\n        aria-expanded=\"false\"\r\n      >\r\n        <i class=\"bi bi-globe me-1\"></i> {{ getCurrentLanguageName() }}\r\n      </button>\r\n      <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"languageDropdown\">\r\n        <li v-for=\"locale in supportedLocales\" :key=\"locale.code\">\r\n          <a \r\n            class=\"dropdown-item\" \r\n            href=\"#\" \r\n            @click.prevent=\"changeLocale(locale.code)\"\r\n            :class=\"{ active: currentLocale === locale.code }\"\r\n          >\r\n            {{ locale.name }}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\nimport { useI18n } from 'vue-i18n'\r\nimport { SUPPORTED_LOCALES, setLocale } from '@/i18n'\r\n\r\nexport default {\r\n  name: 'LanguageSwitcher',\r\n  setup() {\r\n    const { locale } = useI18n()\r\n    const currentLocale = computed(() => locale.value)\r\n    const supportedLocales = ref(SUPPORTED_LOCALES)\r\n    \r\n    // 切换语言\r\n    const changeLocale = (code) => {\r\n      if (code !== currentLocale.value) {\r\n        locale.value = code\r\n        setLocale(code)\r\n        \r\n        // 保存到本地存储\r\n        localStorage.setItem('locale', code)\r\n        \r\n        // 更新HTML文档的lang和dir属性\r\n        document.documentElement.setAttribute('lang', code)\r\n        if (code === 'ar') {\r\n          document.documentElement.setAttribute('dir', 'rtl')\r\n          document.body.classList.add('rtl')\r\n        } else {\r\n          document.documentElement.setAttribute('dir', 'ltr')\r\n          document.body.classList.remove('rtl')\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 获取当前语言名称\r\n    const getCurrentLanguageName = () => {\r\n      const current = supportedLocales.value.find(l => l.code === currentLocale.value)\r\n      return current ? current.name : '语言'\r\n    }\r\n    \r\n    // 监听locale变化，确保所有组件都响应语言变化\r\n    watch(locale, (newLocale) => {\r\n      if (newLocale !== localStorage.getItem('locale')) {\r\n        setLocale(newLocale)\r\n      }\r\n    })\r\n    \r\n    // 组件挂载时确保语言设置正确\r\n    onMounted(() => {\r\n      const savedLocale = localStorage.getItem('locale') || 'zh-CN'\r\n      if (locale.value !== savedLocale) {\r\n        locale.value = savedLocale\r\n        setLocale(savedLocale)\r\n      }\r\n    })\r\n    \r\n    return {\r\n      currentLocale,\r\n      supportedLocales,\r\n      changeLocale,\r\n      getCurrentLanguageName\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.language-switcher {\r\n  position: relative;\r\n  z-index: 1000;\r\n}\r\n\r\n.dropdown-menu {\r\n  min-width: 150px;\r\n  padding: 0.5rem 0;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.dropdown-item {\r\n  padding: 0.5rem 1rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.dropdown-item.active,\r\n.dropdown-item:active {\r\n  background-color: #2D0A81;\r\n  color: white;\r\n}\r\n\r\n/* RTL支持 */\r\n:global(.rtl) .me-1 {\r\n  margin-right: 0 !important;\r\n  margin-left: 0.25rem !important;\r\n}\r\n\r\n:global(.rtl) .dropdown-menu-end {\r\n  right: auto;\r\n  left: 0;\r\n}\r\n</style> "],"mappings":";;AA6BA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAI,QAAS,KAAI;AACpD,SAASC,OAAM,QAAS,UAAS;AACjC,SAASC,iBAAiB,EAAEC,SAAQ,QAAS,QAAO;AAEpD,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAKA,CAAA,EAAG;IACN,MAAM;MAAEC;IAAO,IAAIL,OAAO,CAAC;IAC3B,MAAMM,aAAY,GAAIT,QAAQ,CAAC,MAAMQ,MAAM,CAACE,KAAK;IACjD,MAAMC,gBAAe,GAAIZ,GAAG,CAACK,iBAAiB;;IAE9C;IACA,MAAMQ,YAAW,GAAKC,IAAI,IAAK;MAC7B,IAAIA,IAAG,KAAMJ,aAAa,CAACC,KAAK,EAAE;QAChCF,MAAM,CAACE,KAAI,GAAIG,IAAG;QAClBR,SAAS,CAACQ,IAAI;;QAEd;QACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,IAAI;;QAEnC;QACAG,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,MAAM,EAAEL,IAAI;QAClD,IAAIA,IAAG,KAAM,IAAI,EAAE;UACjBG,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,KAAK,EAAE,KAAK;UAClDF,QAAQ,CAACG,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,KAAK;QACnC,OAAO;UACLL,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,KAAK,EAAE,KAAK;UAClDF,QAAQ,CAACG,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,KAAK;QACtC;MACF;IACF;;IAEA;IACA,MAAMC,sBAAqB,GAAIA,CAAA,KAAM;MACnC,MAAMC,OAAM,GAAIb,gBAAgB,CAACD,KAAK,CAACe,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACb,IAAG,KAAMJ,aAAa,CAACC,KAAK;MAC/E,OAAOc,OAAM,GAAIA,OAAO,CAAClB,IAAG,GAAI,IAAG;IACrC;;IAEA;IACAJ,KAAK,CAACM,MAAM,EAAGmB,SAAS,IAAK;MAC3B,IAAIA,SAAQ,KAAMb,YAAY,CAACc,OAAO,CAAC,QAAQ,CAAC,EAAE;QAChDvB,SAAS,CAACsB,SAAS;MACrB;IACF,CAAC;;IAED;IACA1B,SAAS,CAAC,MAAM;MACd,MAAM4B,WAAU,GAAIf,YAAY,CAACc,OAAO,CAAC,QAAQ,KAAK,OAAM;MAC5D,IAAIpB,MAAM,CAACE,KAAI,KAAMmB,WAAW,EAAE;QAChCrB,MAAM,CAACE,KAAI,GAAImB,WAAU;QACzBxB,SAAS,CAACwB,WAAW;MACvB;IACF,CAAC;IAED,OAAO;MACLpB,aAAa;MACbE,gBAAgB;MAChBC,YAAY;MACZW;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}