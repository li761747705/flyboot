{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"language-switcher\"\n};\nconst _hoisted_2 = {\n  class: \"dropdown\"\n};\nconst _hoisted_3 = {\n  class: \"btn btn-link dropdown-toggle\",\n  type: \"button\",\n  id: \"languageDropdown\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n};\nconst _hoisted_4 = {\n  class: \"language-icon\"\n};\nconst _hoisted_5 = {\n  class: \"language-name d-none d-md-inline-block\"\n};\nconst _hoisted_6 = {\n  class: \"dropdown-menu dropdown-menu-end\",\n  \"aria-labelledby\": \"languageDropdown\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"language-option-icon\"\n};\nconst _hoisted_9 = {\n  class: \"language-option-label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($options.getCurrentLanguageIcon()), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($options.getCurrentLanguageName()), 1 /* TEXT */)]), _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.languageOptions, lang => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: lang.value\n    }, [_createElementVNode(\"a\", {\n      class: _normalizeClass([\"dropdown-item\", {\n        active: $data.currentLanguage === lang.value\n      }]),\n      href: \"#\",\n      onClick: _withModifiers($event => $options.changeLanguage(lang.value), [\"prevent\"])\n    }, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(lang.icon), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(lang.label), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","type","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$options","getCurrentLanguageIcon","_hoisted_5","getCurrentLanguageName","_hoisted_6","_Fragment","_renderList","$setup","languageOptions","lang","key","value","_normalizeClass","active","$data","currentLanguage","href","onClick","_withModifiers","$event","changeLanguage","_hoisted_8","icon","_hoisted_9","label","_hoisted_7"],"sources":["C:\\Users\\Administrator\\Desktop\\flyboot\\src\\components\\LanguageSwitcher.vue"],"sourcesContent":["<template>\r\n  <div class=\"language-switcher\">\r\n    <div class=\"dropdown\">\r\n      <button class=\"btn btn-link dropdown-toggle\" type=\"button\" id=\"languageDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n        <span class=\"language-icon\">{{ getCurrentLanguageIcon() }}</span>\r\n        <span class=\"language-name d-none d-md-inline-block\">{{ getCurrentLanguageName() }}</span>\r\n      </button>\r\n      <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"languageDropdown\">\r\n        <li v-for=\"lang in languageOptions\" :key=\"lang.value\">\r\n          <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"changeLanguage(lang.value)\" :class=\"{ active: currentLanguage === lang.value }\">\r\n            <span class=\"language-option-icon\">{{ lang.icon }}</span>\r\n            <span class=\"language-option-label\">{{ lang.label }}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useI18n } from 'vue-i18n';\r\nimport { languageOptions } from '@/i18n';\r\n\r\nexport default {\r\n  name: 'LanguageSwitcher',\r\n  setup() {\r\n    const { locale } = useI18n();\r\n    \r\n    return {\r\n      locale,\r\n      languageOptions\r\n    };\r\n  },\r\n  data() {\r\n    return {\r\n      currentLanguage: this.locale\r\n    };\r\n  },\r\n  methods: {\r\n    changeLanguage(lang) {\r\n      this.locale = lang;\r\n      this.currentLanguage = lang;\r\n      localStorage.setItem('language', lang);\r\n      document.documentElement.setAttribute('lang', lang);\r\n      \r\n      // Â¶ÇÊûúÊòØÈòøÊãâ‰ºØËØ≠ÔºåÊ∑ªÂä†RTLÊîØÊåÅ\r\n      if (lang === 'ar') {\r\n        document.documentElement.setAttribute('dir', 'rtl');\r\n      } else {\r\n        document.documentElement.setAttribute('dir', 'ltr');\r\n      }\r\n    },\r\n    getCurrentLanguageIcon() {\r\n      const lang = this.languageOptions.find(l => l.value === this.currentLanguage);\r\n      return lang ? lang.icon : 'üåê';\r\n    },\r\n    getCurrentLanguageName() {\r\n      const lang = this.languageOptions.find(l => l.value === this.currentLanguage);\r\n      return lang ? lang.label : 'Language';\r\n    }\r\n  },\r\n  mounted() {\r\n    // ÂàùÂßãÂåñÊó∂‰ªélocalStorageËé∑ÂèñËØ≠Ë®ÄËÆæÁΩÆ\r\n    const savedLang = localStorage.getItem('language');\r\n    if (savedLang) {\r\n      this.changeLanguage(savedLang);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.language-switcher {\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-toggle {\r\n  color: inherit;\r\n  text-decoration: none;\r\n  padding: 0.25rem 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.dropdown-toggle::after {\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.language-icon {\r\n  font-size: 1.2rem;\r\n  margin-right: 0.3rem;\r\n}\r\n\r\n.dropdown-menu {\r\n  min-width: 180px;\r\n  padding: 0.5rem 0;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.dropdown-item {\r\n  padding: 0.5rem 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.dropdown-item.active {\r\n  background-color: rgba(45, 10, 129, 0.1);\r\n  color: #2D0A81;\r\n}\r\n\r\n.language-option-icon {\r\n  margin-right: 0.75rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.language-option-label {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* RTLÊîØÊåÅ */\r\n[dir=\"rtl\"] .language-icon {\r\n  margin-right: 0;\r\n  margin-left: 0.3rem;\r\n}\r\n\r\n[dir=\"rtl\"] .dropdown-toggle::after {\r\n  margin-left: 0;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n[dir=\"rtl\"] .language-option-icon {\r\n  margin-right: 0;\r\n  margin-left: 0.75rem;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAU;;EACXA,KAAK,EAAC,8BAA8B;EAACC,IAAI,EAAC,QAAQ;EAACC,EAAE,EAAC,kBAAkB;EAAC,gBAAc,EAAC,UAAU;EAAC,eAAa,EAAC;;;EACjHF,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAwC;;EAElDA,KAAK,EAAC,iCAAiC;EAAC,iBAAe,EAAC;;mBAPlE;;EAUkBA,KAAK,EAAC;AAAsB;;EAC5BA,KAAK,EAAC;AAAuB;;uBAV7CG,mBAAA,CAeM,OAfNC,UAeM,GAdJC,mBAAA,CAaM,OAbNC,UAaM,GAZJD,mBAAA,CAGS,UAHTE,UAGS,GAFPF,mBAAA,CAAiE,QAAjEG,UAAiE,EAAAC,gBAAA,CAAlCC,QAAA,CAAAC,sBAAsB,oBACrDN,mBAAA,CAA0F,QAA1FO,UAA0F,EAAAH,gBAAA,CAAlCC,QAAA,CAAAG,sBAAsB,mB,GAEhFR,mBAAA,CAOK,MAPLS,UAOK,I,kBANHX,mBAAA,CAKKY,SAAA,QAbbC,WAAA,CAQ2BC,MAAA,CAAAC,eAAe,EAAvBC,IAAI;yBAAfhB,mBAAA,CAKK;MALgCiB,GAAG,EAAED,IAAI,CAACE;QAC7ChB,mBAAA,CAGI;MAHDL,KAAK,EATlBsB,eAAA,EASmB,eAAe;QAAAC,MAAA,EAAwEC,KAAA,CAAAC,eAAe,KAAKN,IAAI,CAACE;MAAK;MAArGK,IAAI,EAAC,GAAG;MAAEC,OAAK,EATlDC,cAAA,CAAAC,MAAA,IAS4DnB,QAAA,CAAAoB,cAAc,CAACX,IAAI,CAACE,KAAK;QACzEhB,mBAAA,CAAyD,QAAzD0B,UAAyD,EAAAtB,gBAAA,CAAnBU,IAAI,CAACa,IAAI,kBAC/C3B,mBAAA,CAA2D,QAA3D4B,UAA2D,EAAAxB,gBAAA,CAApBU,IAAI,CAACe,KAAK,iB,yBAX7DC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}