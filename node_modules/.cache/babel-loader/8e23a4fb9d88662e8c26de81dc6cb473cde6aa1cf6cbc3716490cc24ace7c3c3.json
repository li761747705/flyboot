{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/*!\n  * core-base v12.0.0-alpha.2\n  * (c) 2016-present kazuya kawaguchi and contributors\n  * Released under the MIT License.\n  */\nimport { getGlobalThis, hasOwn, isNumber, create, isObject, isString, isBoolean, warn, format as format$1, isFunction, isPromise, isArray, isPlainObject, assign, isRegExp, warnOnce, deepCopy, isEmptyObject, isDate, join, toDisplayString, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey } from '@intlify/shared';\nimport { detectHtmlTag, defaultOnError, createParser, optimize, mangle, createCompileError, COMPILE_ERROR_CODES_EXTEND_POINT } from '@intlify/message-compiler';\nexport { createCompileError } from '@intlify/message-compiler';\n\n/**\n * This is only called in esm-bundler builds.\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n  if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n  }\n  if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n  }\n}\nfunction format(ast) {\n  const msg = ctx => formatParts(ctx, ast);\n  return msg;\n}\nfunction formatParts(ctx, ast) {\n  const body = resolveBody(ast);\n  if (body == null) {\n    throw createUnhandleNodeError(0 /* NodeTypes.Resource */);\n  }\n  const type = resolveType(body);\n  if (type === 1 /* NodeTypes.Plural */) {\n    const plural = body;\n    const cases = resolveCases(plural);\n    return ctx.plural(cases.reduce((messages, c) => [...messages, formatMessageParts(ctx, c)], []));\n  } else {\n    return formatMessageParts(ctx, body);\n  }\n}\nconst PROPS_BODY = ['b', 'body'];\nfunction resolveBody(node) {\n  return resolveProps(node, PROPS_BODY);\n}\nconst PROPS_CASES = ['c', 'cases'];\nfunction resolveCases(node) {\n  return resolveProps(node, PROPS_CASES, []);\n}\nfunction formatMessageParts(ctx, node) {\n  const static_ = resolveStatic(node);\n  if (static_ != null) {\n    return ctx.type === 'text' ? static_ : ctx.normalize([static_]);\n  } else {\n    const messages = resolveItems(node).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n    return ctx.normalize(messages);\n  }\n}\nconst PROPS_STATIC = ['s', 'static'];\nfunction resolveStatic(node) {\n  return resolveProps(node, PROPS_STATIC);\n}\nconst PROPS_ITEMS = ['i', 'items'];\nfunction resolveItems(node) {\n  return resolveProps(node, PROPS_ITEMS, []);\n}\nfunction formatMessagePart(ctx, node) {\n  const type = resolveType(node);\n  switch (type) {\n    case 3 /* NodeTypes.Text */:\n      {\n        return resolveValue$1(node, type);\n      }\n    case 9 /* NodeTypes.Literal */:\n      {\n        return resolveValue$1(node, type);\n      }\n    case 4 /* NodeTypes.Named */:\n      {\n        const named = node;\n        if (hasOwn(named, 'k') && named.k) {\n          return ctx.interpolate(ctx.named(named.k));\n        }\n        if (hasOwn(named, 'key') && named.key) {\n          return ctx.interpolate(ctx.named(named.key));\n        }\n        throw createUnhandleNodeError(type);\n      }\n    case 5 /* NodeTypes.List */:\n      {\n        const list = node;\n        if (hasOwn(list, 'i') && isNumber(list.i)) {\n          return ctx.interpolate(ctx.list(list.i));\n        }\n        if (hasOwn(list, 'index') && isNumber(list.index)) {\n          return ctx.interpolate(ctx.list(list.index));\n        }\n        throw createUnhandleNodeError(type);\n      }\n    case 6 /* NodeTypes.Linked */:\n      {\n        const linked = node;\n        const modifier = resolveLinkedModifier(linked);\n        const key = resolveLinkedKey(linked);\n        return ctx.linked(formatMessagePart(ctx, key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n      }\n    case 7 /* NodeTypes.LinkedKey */:\n      {\n        return resolveValue$1(node, type);\n      }\n    case 8 /* NodeTypes.LinkedModifier */:\n      {\n        return resolveValue$1(node, type);\n      }\n    default:\n      throw new Error(`unhandled node on format message part: ${type}`);\n  }\n}\nconst PROPS_TYPE = ['t', 'type'];\nfunction resolveType(node) {\n  return resolveProps(node, PROPS_TYPE);\n}\nconst PROPS_VALUE = ['v', 'value'];\nfunction resolveValue$1(node, type) {\n  const resolved = resolveProps(node, PROPS_VALUE);\n  if (resolved != null) {\n    return resolved;\n  } else {\n    throw createUnhandleNodeError(type);\n  }\n}\nconst PROPS_MODIFIER = ['m', 'modifier'];\nfunction resolveLinkedModifier(node) {\n  return resolveProps(node, PROPS_MODIFIER);\n}\nconst PROPS_KEY = ['k', 'key'];\nfunction resolveLinkedKey(node) {\n  const resolved = resolveProps(node, PROPS_KEY);\n  if (resolved) {\n    return resolved;\n  } else {\n    throw createUnhandleNodeError(6 /* NodeTypes.Linked */);\n  }\n}\nfunction resolveProps(node, props, defaultValue) {\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (hasOwn(node, prop) && node[prop] != null) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return node[prop];\n    }\n  }\n  return defaultValue;\n}\nfunction createUnhandleNodeError(type) {\n  return new Error(`unhandled node type: ${type}`);\n}\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n  if (warnHtmlMessage && detectHtmlTag(source)) {\n    warn(format$1(WARN_MESSAGE, {\n      source\n    }));\n  }\n}\nconst defaultOnCacheKey = message => message;\nlet compileCache = create();\nfunction clearCompileCache() {\n  compileCache = create();\n}\nfunction isMessageAST(val) {\n  return isObject(val) && resolveType(val) === 0 && (hasOwn(val, 'b') || hasOwn(val, 'body'));\n}\nfunction baseCompile(message, options = {}) {\n  // error detecting on compile\n  let detectError = false;\n  const onError = options.onError || defaultOnError;\n  options.onError = err => {\n    detectError = true;\n    onError(err);\n  };\n  // parse source codes\n  const parser = createParser(options);\n  const ast = parser.parse(message);\n  // optimize ASTs\n  options.optimize && optimize(ast);\n  // minimize ASTs\n  options.mangle && mangle(ast);\n  return {\n    ast,\n    detectError,\n    code: ''\n  };\n}\n/* #__NO_SIDE_EFFECTS__ */\nfunction compile(message, context) {\n  if (!__INTLIFY_DROP_MESSAGE_COMPILER__ && isString(message)) {\n    // check HTML message\n    const warnHtmlMessage = isBoolean(context.warnHtmlMessage) ? context.warnHtmlMessage : true;\n    process.env.NODE_ENV !== 'production' && checkHtmlMessage(message, warnHtmlMessage);\n    // check caches\n    const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n    const cacheKey = onCacheKey(message);\n    const cached = compileCache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    // compile message\n    const {\n      ast,\n      detectError\n    } = baseCompile(message, {\n      ...context,\n      location: process.env.NODE_ENV !== 'production',\n      mangle: !(process.env.NODE_ENV !== 'production'),\n      optimize: !(process.env.NODE_ENV !== 'production')\n    });\n    // compose message function from AST\n    const msg = format(ast);\n    // if occurred compile error, don't cache\n    return !detectError ? compileCache[cacheKey] = msg : msg;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && !isMessageAST(message)) {\n      warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n      return () => message;\n    }\n    // AST case (passed from bundler)\n    const cacheKey = message.cacheKey;\n    if (cacheKey) {\n      const cached = compileCache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      // compose message function from message (AST)\n      return compileCache[cacheKey] = format(message);\n    } else {\n      return format(message);\n    }\n  }\n}\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n  devtools = hook;\n}\nfunction getDevToolsHook() {\n  return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n  // TODO: queue if devtools is undefined\n  devtools && devtools.emit('i18n:init', {\n    timestamp: Date.now(),\n    i18n,\n    version,\n    meta\n  });\n}\nconst translateDevTools = /* #__PURE__*/createDevToolsHook('function:translate');\nfunction createDevToolsHook(hook) {\n  return payloads => devtools && devtools.emit(hook, payloads);\n}\nconst CoreErrorCodes = {\n  INVALID_ARGUMENT: COMPILE_ERROR_CODES_EXTEND_POINT,\n  // 17\n  INVALID_DATE_ARGUMENT: 18,\n  INVALID_ISO_DATE_ARGUMENT: 19,\n  NOT_SUPPORT_NON_STRING_MESSAGE: 20,\n  NOT_SUPPORT_LOCALE_PROMISE_VALUE: 21,\n  NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: 22,\n  NOT_SUPPORT_LOCALE_TYPE: 23\n};\nconst CORE_ERROR_CODES_EXTEND_POINT = 24;\nfunction createCoreError(code) {\n  return createCompileError(code, null, process.env.NODE_ENV !== 'production' ? {\n    messages: errorMessages\n  } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n  [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n  [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' + 'Make sure your Date represents a valid date.',\n  [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n  [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n  return options.locale != null ? resolveLocale(options.locale) : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n  if (isString(locale)) {\n    return locale;\n  } else {\n    if (isFunction(locale)) {\n      if (locale.resolvedOnce && _resolveLocale != null) {\n        return _resolveLocale;\n      } else if (locale.constructor.name === 'Function') {\n        const resolve = locale();\n        if (isPromise(resolve)) {\n          throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n        }\n        return _resolveLocale = resolve;\n      } else {\n        throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n      }\n    } else {\n      throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n    }\n  }\n}\n/**\n * Fallback with simple implemenation\n *\n * @remarks\n * A fallback locale function implemented with a simple fallback algorithm.\n *\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithSimple(ctx, fallback, start) {\n  // prettier-ignore\n  return [...new Set([start, ...(isArray(fallback) ? fallback : isObject(fallback) ? Object.keys(fallback) : isString(fallback) ? [fallback] : [start])])];\n}\n/**\n * Fallback with locale chain\n *\n * @remarks\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nSee [Fallbacking](../../guide/essentials/fallback)\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n  const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n  const context = ctx;\n  if (!context.__localeChainCache) {\n    context.__localeChainCache = new Map();\n  }\n  let chain = context.__localeChainCache.get(startLocale);\n  if (!chain) {\n    chain = [];\n    // first block defined by start\n    let block = [start];\n    // while any intervening block found\n    while (isArray(block)) {\n      block = appendBlockToChain(chain, block, fallback);\n    }\n    // prettier-ignore\n    // last block defined by default\n    const defaults = isArray(fallback) || !isPlainObject(fallback) ? fallback : fallback['default'] ? fallback['default'] : null;\n    // convert defaults to array\n    block = isString(defaults) ? [defaults] : defaults;\n    if (isArray(block)) {\n      appendBlockToChain(chain, block, false);\n    }\n    context.__localeChainCache.set(startLocale, chain);\n  }\n  return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n  let follow = true;\n  for (let i = 0; i < block.length && isBoolean(follow); i++) {\n    const locale = block[i];\n    if (isString(locale)) {\n      follow = appendLocaleToChain(chain, block[i], blocks);\n    }\n  }\n  return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n  let follow;\n  const tokens = locale.split('-');\n  do {\n    const target = tokens.join('-');\n    follow = appendItemToChain(chain, target, blocks);\n    tokens.splice(-1, 1);\n  } while (tokens.length && follow === true);\n  return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n  let follow = false;\n  if (!chain.includes(target)) {\n    follow = true;\n    if (target) {\n      follow = target[target.length - 1] !== '!';\n      const locale = target.replace(/!/g, '');\n      chain.push(locale);\n      if ((isArray(blocks) || isPlainObject(blocks)) && blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        follow = blocks[locale];\n      }\n    }\n  }\n  return follow;\n}\nconst pathStateMachine = [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n  [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n  [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n  [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n  [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 2 /* Actions.INC_SUB_PATH_DEPTH */],\n  [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n  [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n  [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\n * Check if an expression is a literal value.\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n/**\n * Strip quotes from a string\n */\nfunction stripQuotes(str) {\n  const a = str.charCodeAt(0);\n  const b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\n * Determine the type of a character in a keypath.\n */\nfunction getPathCharType(ch) {\n  if (ch === undefined || ch === null) {\n    return \"o\" /* PathCharTypes.END_OF_FAIL */;\n  }\n  const code = ch.charCodeAt(0);\n  switch (code) {\n    case 0x5b: // [\n    case 0x5d: // ]\n    case 0x2e: // .\n    case 0x22: // \"\n    case 0x27:\n      // '\n      return ch;\n    case 0x5f: // _\n    case 0x24: // $\n    case 0x2d:\n      // -\n      return \"i\" /* PathCharTypes.IDENT */;\n    case 0x09: // Tab (HT)\n    case 0x0a: // Newline (LF)\n    case 0x0d: // Return (CR)\n    case 0xa0: // No-break space (NBSP)\n    case 0xfeff: // Byte Order Mark (BOM)\n    case 0x2028: // Line Separator (LS)\n    case 0x2029:\n      // Paragraph Separator (PS)\n      return \"w\" /* PathCharTypes.WORKSPACE */;\n  }\n  return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\nfunction formatSubPath(path) {\n  const trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\n * Parse a string path into an array of segments\n */\nfunction parse(path) {\n  const keys = [];\n  let index = -1;\n  let mode = 0 /* States.BEFORE_PATH */;\n  let subPathDepth = 0;\n  let c;\n  let key; // eslint-disable-line\n  let newChar;\n  let type;\n  let transition;\n  let action;\n  let typeMap;\n  const actions = [];\n  actions[0 /* Actions.APPEND */] = () => {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n  actions[1 /* Actions.PUSH */] = () => {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n  actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n    actions[0 /* Actions.APPEND */]();\n    subPathDepth++;\n  };\n  actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = 4 /* States.IN_SUB_PATH */;\n      actions[0 /* Actions.APPEND */]();\n    } else {\n      subPathDepth = 0;\n      if (key === undefined) {\n        return false;\n      }\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[1 /* Actions.PUSH */]();\n      }\n    }\n  };\n  function maybeUnescapeQuote() {\n    const nextChar = path[index + 1];\n    if (mode === 5 /* States.IN_SINGLE_QUOTE */ && nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */ || mode === 6 /* States.IN_DOUBLE_QUOTE */ && nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */) {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[0 /* Actions.APPEND */]();\n      return true;\n    }\n  }\n  while (mode !== null) {\n    index++;\n    c = path[index];\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n    // check parse error\n    if (transition === 8 /* States.ERROR */) {\n      return;\n    }\n    mode = transition[0];\n    if (transition[1] !== undefined) {\n      action = actions[transition[1]];\n      if (action) {\n        newChar = c;\n        if (action() === false) {\n          return;\n        }\n      }\n    }\n    // check parse finish\n    if (mode === 7 /* States.AFTER_PATH */) {\n      return keys;\n    }\n  }\n}\n// path token cache\nconst cache = new Map();\n/**\n * key-value message resolver\n *\n * @remarks\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveWithKeyValue(obj, path) {\n  return isObject(obj) ? obj[path] : null;\n}\n/**\n * message resolver\n *\n * @remarks\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveValue(obj, path) {\n  // check object\n  if (!isObject(obj)) {\n    return null;\n  }\n  // parse path\n  let hit = cache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      cache.set(path, hit);\n    }\n  }\n  // check hit\n  if (!hit) {\n    return null;\n  }\n  // resolve path value\n  const len = hit.length;\n  let last = obj;\n  let i = 0;\n  while (i < len) {\n    const val = last[hit[i]];\n    if (val === undefined) {\n      return null;\n    }\n    if (isFunction(last)) {\n      return null;\n    }\n    last = val;\n    i++;\n  }\n  return last;\n}\nconst CoreWarnCodes = {\n  NOT_FOUND_KEY: 1,\n  FALLBACK_TO_TRANSLATE: 2,\n  CANNOT_FORMAT_NUMBER: 3,\n  FALLBACK_TO_NUMBER_FORMAT: 4,\n  CANNOT_FORMAT_DATE: 5,\n  FALLBACK_TO_DATE_FORMAT: 6,\n  EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7\n};\nconst CORE_WARN_CODES_EXTEND_POINT = 8;\n/** @internal */\nconst warnMessages = {\n  [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n  [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n  return format$1(warnMessages[code], ...args);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Intlify core-base version\n * @internal\n */\nconst VERSION = '12.0.0-alpha.2';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = str => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n  return {\n    upper: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? val.toUpperCase() : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? val.children.toUpperCase() : val;\n    },\n    lower: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? val.toLowerCase() : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? val.children.toLowerCase() : val;\n    },\n    capitalize: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? capitalize(val) : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? capitalize(val.children) : val;\n    }\n  };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n  _compiler = compiler;\n}\nlet _resolver;\n/**\n * Register the message resolver\n *\n * @param resolver - A {@link MessageResolver} function\n *\n * @VueI18nGeneral\n */\nfunction registerMessageResolver(resolver) {\n  _resolver = resolver;\n}\nlet _fallbacker;\n/**\n * Register the locale fallbacker\n *\n * @param fallbacker - A {@link LocaleFallbacker} function\n *\n * @VueI18nGeneral\n */\nfunction registerLocaleFallbacker(fallbacker) {\n  _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = meta => {\n  _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = context => {\n  _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n  // setup options\n  const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n  const version = isString(options.version) ? options.version : VERSION;\n  const locale = isString(options.locale) || isFunction(options.locale) ? options.locale : DEFAULT_LOCALE;\n  const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n  const fallbackLocale = isArray(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || isString(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : _locale;\n  const messages = isPlainObject(options.messages) ? options.messages : createResources(_locale);\n  const datetimeFormats = isPlainObject(options.datetimeFormats) ? options.datetimeFormats : createResources(_locale);\n  const numberFormats = isPlainObject(options.numberFormats) ? options.numberFormats : createResources(_locale);\n  const modifiers = assign(create(), options.modifiers, getDefaultLinkedModifiers());\n  const pluralRules = options.pluralRules || create();\n  const missing = isFunction(options.missing) ? options.missing : null;\n  const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;\n  const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;\n  const fallbackFormat = !!options.fallbackFormat;\n  const unresolving = !!options.unresolving;\n  const postTranslation = isFunction(options.postTranslation) ? options.postTranslation : null;\n  const processor = isPlainObject(options.processor) ? options.processor : null;\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n  const escapeParameter = !!options.escapeParameter;\n  const messageCompiler = isFunction(options.messageCompiler) ? options.messageCompiler : _compiler;\n  if (process.env.NODE_ENV !== 'production' && !false && !false && isFunction(options.messageCompiler)) {\n    warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n  }\n  const messageResolver = isFunction(options.messageResolver) ? options.messageResolver : _resolver || resolveWithKeyValue;\n  const localeFallbacker = isFunction(options.localeFallbacker) ? options.localeFallbacker : _fallbacker || fallbackWithSimple;\n  const fallbackContext = isObject(options.fallbackContext) ? options.fallbackContext : undefined;\n  // setup internal options\n  const internalOptions = options;\n  const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters) ? internalOptions.__datetimeFormatters : new Map();\n  const __numberFormatters = isObject(internalOptions.__numberFormatters) ? internalOptions.__numberFormatters : new Map();\n  const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n  _cid++;\n  const context = {\n    version,\n    cid: _cid,\n    locale,\n    fallbackLocale,\n    messages,\n    modifiers,\n    pluralRules,\n    missing,\n    missingWarn,\n    fallbackWarn,\n    fallbackFormat,\n    unresolving,\n    postTranslation,\n    processor,\n    warnHtmlMessage,\n    escapeParameter,\n    messageCompiler,\n    messageResolver,\n    localeFallbacker,\n    fallbackContext,\n    onWarn,\n    __meta\n  };\n  {\n    context.datetimeFormats = datetimeFormats;\n    context.numberFormats = numberFormats;\n    context.__datetimeFormatters = __datetimeFormatters;\n    context.__numberFormatters = __numberFormatters;\n  }\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production') {\n    context.__v_emitter = internalOptions.__v_emitter != null ? internalOptions.__v_emitter : undefined;\n  }\n  // NOTE: experimental !!\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    initI18nDevTools(context, version, __meta);\n  }\n  return context;\n}\nconst createResources = locale => ({\n  [locale]: create()\n});\n// TODO: API documentation, if `@intlify/core` will be documented as a separate package\nfunction getLocaleMessage(ctx, locale) {\n  const src = ctx.messages[locale];\n  if (src == null) {\n    return undefined;\n  }\n  const dest = create();\n  deepCopy(src, dest);\n  return dest;\n}\n// TODO: API documentation, if `@intlify/core` will be documented as a separate package\nfunction setLocaleMessage(ctx, locale, messages) {\n  ctx.messages[locale] = messages;\n}\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n  return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n  return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n  const {\n    missing,\n    onWarn\n  } = context;\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production') {\n    const emitter = context.__v_emitter;\n    if (emitter) {\n      emitter.emit('missing', {\n        locale,\n        key,\n        type,\n        groupId: `${type}:${key}`\n      });\n    }\n  }\n  if (missing !== null) {\n    const ret = missing(context, locale, key, type);\n    return isString(ret) ? ret : key;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && isTranslateMissingWarn(missingWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, {\n        key,\n        locale\n      }));\n    }\n    return key;\n  }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n  const context = ctx;\n  context.__localeChainCache = new Map();\n  ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n  if (locale === compareLocale) return false;\n  return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n  const index = locales.indexOf(targetLocale);\n  if (index === -1) {\n    return false;\n  }\n  for (let i = index + 1; i < locales.length; i++) {\n    if (isAlmostSameLocale(targetLocale, locales[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n  dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n  numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n  const {\n    datetimeFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __datetimeFormatters\n  } = context;\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.dateTimeFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n    return MISSING_RESOLVE_VALUE;\n  }\n  const [key, value, options, overrides] = parseDateTimeArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = getLocale(context, options);\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!isString(key) || key === '') {\n    return new Intl.DateTimeFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let datetimeFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'datetime format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit('fallback', {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    datetimeFormat = datetimeFormats[targetLocale] || {};\n    format = datetimeFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n    from = to;\n  }\n  // checking format and target locale\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __datetimeFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n    __datetimeFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName', 'formatMatcher', 'hour12', 'timeZone', 'dateStyle', 'timeStyle', 'calendar', 'dayPeriod', 'numberingSystem', 'hourCycle', 'fractionalSecondDigits'];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = create();\n  let overrides = create();\n  let value;\n  if (isString(arg1)) {\n    // Only allow ISO strings - other date formats are often supported,\n    // but may cause different results in different browsers.\n    const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n    if (!matches) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n    // Some browsers can not parse the iso datetime separated by space,\n    // this is a compromise solution by replace the 'T'/' ' with 'T'\n    const dateTime = matches[3] ? matches[3].trim().startsWith('T') ? `${matches[1].trim()}${matches[3].trim()}` : `${matches[1].trim()}T${matches[3].trim()}` : matches[1].trim();\n    value = new Date(dateTime);\n    try {\n      // This will fail if the date is not valid\n      value.toISOString();\n    } catch {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n  } else if (isDate(arg1)) {\n    if (isNaN(arg1.getTime())) {\n      throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n    }\n    value = arg1;\n  } else if (isNumber(arg1)) {\n    value = arg1;\n  } else {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__datetimeFormatters.has(id)) {\n      continue;\n    }\n    context.__datetimeFormatters.delete(id);\n  }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n  const {\n    numberFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __numberFormatters\n  } = context;\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.numberFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n    return MISSING_RESOLVE_VALUE;\n  }\n  const [key, value, options, overrides] = parseNumberArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = getLocale(context, options);\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!isString(key) || key === '') {\n    return new Intl.NumberFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let numberFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'number format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit('fallback', {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    numberFormat = numberFormats[targetLocale] || {};\n    format = numberFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n    from = to;\n  }\n  // checking format and target locale\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __numberFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n    __numberFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'style', 'currency', 'currencyDisplay', 'currencySign', 'useGrouping', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits', 'compactDisplay', 'notation', 'signDisplay', 'unit', 'unitDisplay', 'roundingMode', 'roundingPriority', 'roundingIncrement', 'trailingZeroDisplay'];\n/** @internal */\nfunction parseNumberArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = create();\n  let overrides = create();\n  if (!isNumber(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  const value = arg1;\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__numberFormatters.has(id)) {\n      continue;\n    }\n    context.__numberFormatters.delete(id);\n  }\n}\nconst DEFAULT_MODIFIER = str => str;\nconst DEFAULT_MESSAGE = ctx => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = values => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n  choice = Math.abs(choice);\n  if (choicesLength === 2) {\n    // prettier-ignore\n    return choice ? choice > 1 ? 1 : 0 : 1;\n  }\n  return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n  // prettier-ignore\n  const index = isNumber(options.pluralIndex) ? options.pluralIndex : -1;\n  // prettier-ignore\n  return options.named && (isNumber(options.named.count) || isNumber(options.named.n)) ? isNumber(options.named.count) ? options.named.count : isNumber(options.named.n) ? options.named.n : index : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n  if (!props.count) {\n    props.count = pluralIndex;\n  }\n  if (!props.n) {\n    props.n = pluralIndex;\n  }\n}\nfunction createMessageContext(options = {}) {\n  const locale = options.locale;\n  const pluralIndex = getPluralIndex(options);\n  const pluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? options.pluralRules[locale] : pluralDefault;\n  const orgPluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? pluralDefault : undefined;\n  const plural = messages => {\n    return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n  };\n  const _list = options.list || [];\n  const list = index => _list[index];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _named = options.named || create();\n  isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n  const named = key => _named[key];\n  function message(key, useLinked) {\n    // prettier-ignore\n    const msg = isFunction(options.messages) ? options.messages(key, !!useLinked) : isObject(options.messages) ? options.messages[key] : false;\n    return !msg ? options.parent ? options.parent.message(key) // resolve from parent messages\n    : DEFAULT_MESSAGE : msg;\n  }\n  const _modifier = name => options.modifiers ? options.modifiers[name] : DEFAULT_MODIFIER;\n  const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize) ? options.processor.normalize : DEFAULT_NORMALIZE;\n  const interpolate = isPlainObject(options.processor) && isFunction(options.processor.interpolate) ? options.processor.interpolate : DEFAULT_INTERPOLATE;\n  const type = isPlainObject(options.processor) && isString(options.processor.type) ? options.processor.type : DEFAULT_MESSAGE_DATA_TYPE;\n  const linked = (key, ...args) => {\n    const [arg1, arg2] = args;\n    let type = 'text';\n    let modifier = '';\n    if (args.length === 1) {\n      if (isObject(arg1)) {\n        modifier = arg1.modifier || modifier;\n        type = arg1.type || type;\n      } else if (isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n    } else if (args.length === 2) {\n      if (isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n      if (isString(arg2)) {\n        type = arg2 || type;\n      }\n    }\n    const ret = message(key, true)(ctx);\n    const msg =\n    // The message in vnode resolved with linked are returned as an array by processor.nomalize\n    type === 'vnode' && isArray(ret) && modifier ? ret[0] : ret;\n    return modifier ? _modifier(modifier)(msg, type) : msg;\n  };\n  const ctx = {\n    [\"list\" /* HelperNameMap.LIST */]: list,\n    [\"named\" /* HelperNameMap.NAMED */]: named,\n    [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n    [\"linked\" /* HelperNameMap.LINKED */]: linked,\n    [\"message\" /* HelperNameMap.MESSAGE */]: message,\n    [\"type\" /* HelperNameMap.TYPE */]: type,\n    [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n    [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n    [\"values\" /* HelperNameMap.VALUES */]: assign(create(), _list, _named)\n  };\n  return ctx;\n}\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = val => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n  const {\n    fallbackFormat,\n    postTranslation,\n    unresolving,\n    messageCompiler,\n    fallbackLocale,\n    messages\n  } = context;\n  const [key, options] = parseTranslateArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const escapeParameter = isBoolean(options.escapeParameter) ? options.escapeParameter : context.escapeParameter;\n  const resolvedMessage = !!options.resolvedMessage;\n  // prettier-ignore\n  const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n  ? !isBoolean(options.default) ? options.default : !messageCompiler ? () => key : key : fallbackFormat // default by `fallbackFormat` option\n  ? !messageCompiler ? () => key : key : null;\n  const enableDefaultMsg = fallbackFormat || defaultMsgOrKey != null && (isString(defaultMsgOrKey) || isFunction(defaultMsgOrKey));\n  const locale = getLocale(context, options);\n  // escape params\n  escapeParameter && escapeParams(options);\n  // resolve message format\n  // eslint-disable-next-line prefer-const\n  let [formatScope, targetLocale, message] = !resolvedMessage ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) : [key, locale, messages[locale] || create()];\n  // NOTE:\n  //  Fix to work around `ssrTransfrom` bug in Vite.\n  //  https://github.com/vitejs/vite/issues/4306\n  //  To get around this, use temporary variables.\n  //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n  let format = formatScope;\n  // if you use default message, set it as message format!\n  let cacheBaseKey = key;\n  if (!resolvedMessage && !(isString(format) || isMessageAST(format) || isMessageFunction(format))) {\n    if (enableDefaultMsg) {\n      format = defaultMsgOrKey;\n      cacheBaseKey = format;\n    }\n  }\n  // checking message format and target locale\n  if (!resolvedMessage && (!(isString(format) || isMessageAST(format) || isMessageFunction(format)) || !isString(targetLocale))) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  // TODO: refactor\n  if (process.env.NODE_ENV !== 'production' && isString(format) && context.messageCompiler == null) {\n    warn(`The message format compilation is not supported in this build. ` + `Because message compiler isn't included. ` + `You need to pre-compilation all message format. ` + `So translate function return '${key}'.`);\n    return key;\n  }\n  // setup compile error detecting\n  let occurred = false;\n  const onError = () => {\n    occurred = true;\n  };\n  // compile message format\n  const msg = !isMessageFunction(format) ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) : format;\n  // if occurred compile error, return the message format\n  if (occurred) {\n    return format;\n  }\n  // evaluate message with context\n  const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n  const msgContext = createMessageContext(ctxOptions);\n  const messaged = evaluateMessage(context, msg, msgContext);\n  // if use post translation option, proceed it with handler\n  const ret = postTranslation ? postTranslation(messaged, key) : messaged;\n  // NOTE: experimental !!\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    // prettier-ignore\n    const payloads = {\n      timestamp: Date.now(),\n      key: isString(key) ? key : isMessageFunction(format) ? format.key : '',\n      locale: targetLocale || (isMessageFunction(format) ? format.locale : ''),\n      format: isString(format) ? format : isMessageFunction(format) ? format.source : '',\n      message: ret\n    };\n    payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n    translateDevTools(payloads);\n  }\n  return ret;\n}\nfunction escapeParams(options) {\n  if (isArray(options.list)) {\n    options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n  } else if (isObject(options.named)) {\n    Object.keys(options.named).forEach(key => {\n      if (isString(options.named[key])) {\n        options.named[key] = escapeHtml(options.named[key]);\n      }\n    });\n  }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n  const {\n    messages,\n    onWarn,\n    messageResolver: resolveValue,\n    localeFallbacker\n  } = context;\n  const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n  let message = create();\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'translate';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && !isAlmostSameLocale(locale, targetLocale) && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit('fallback', {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    message = messages[targetLocale] || create();\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      start = window.performance.now();\n      startTag = 'intlify-message-resolve-start';\n      endTag = 'intlify-message-resolve-end';\n      mark && mark(startTag);\n    }\n    if ((format = resolveValue(message, key)) === null) {\n      // if null, resolve with object key path\n      format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      const end = window.performance.now();\n      const emitter = context.__v_emitter;\n      if (emitter && start && format) {\n        emitter.emit('message-resolve', {\n          type: 'message-resolve',\n          key,\n          message: format,\n          time: end - start,\n          groupId: `${type}:${key}`\n        });\n      }\n      if (startTag && endTag && mark && measure) {\n        mark(endTag);\n        measure('intlify message resolve', startTag, endTag);\n      }\n    }\n    if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n      break;\n    }\n    if (!isImplicitFallback(targetLocale, locales)) {\n      const missingRet = handleMissing(context,\n      // eslint-disable-line @typescript-eslint/no-explicit-any\n      key, targetLocale, missingWarn, type);\n      if (missingRet !== key) {\n        format = missingRet;\n      }\n    }\n    from = to;\n  }\n  return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n  const {\n    messageCompiler,\n    warnHtmlMessage\n  } = context;\n  if (isMessageFunction(format)) {\n    const msg = format;\n    msg.locale = msg.locale || targetLocale;\n    msg.key = msg.key || key;\n    return msg;\n  }\n  if (messageCompiler == null) {\n    const msg = () => format;\n    msg.locale = targetLocale;\n    msg.key = key;\n    return msg;\n  }\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-compilation-start';\n    endTag = 'intlify-message-compilation-end';\n    mark && mark(startTag);\n  }\n  const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n    if (emitter && start) {\n      emitter.emit('message-compilation', {\n        type: 'message-compilation',\n        message: format,\n        time: end - start,\n        groupId: `${'translate'}:${key}`\n      });\n    }\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message compilation', startTag, endTag);\n    }\n  }\n  msg.locale = targetLocale;\n  msg.key = key;\n  msg.source = format;\n  return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-evaluation-start';\n    endTag = 'intlify-message-evaluation-end';\n    mark && mark(startTag);\n  }\n  const messaged = msg(msgCtx);\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n    if (emitter && start) {\n      emitter.emit('message-evaluation', {\n        type: 'message-evaluation',\n        value: messaged,\n        time: end - start,\n        groupId: `${'translate'}:${msg.key}`\n      });\n    }\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message evaluation', startTag, endTag);\n    }\n  }\n  return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n  const [arg1, arg2, arg3] = args;\n  const options = create();\n  if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1) && !isMessageAST(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  // prettier-ignore\n  const key = isNumber(arg1) ? String(arg1) : isMessageFunction(arg1) ? arg1 : arg1;\n  if (isNumber(arg2)) {\n    options.plural = arg2;\n  } else if (isString(arg2)) {\n    options.default = arg2;\n  } else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n    options.named = arg2;\n  } else if (isArray(arg2)) {\n    options.list = arg2;\n  }\n  if (isNumber(arg3)) {\n    options.plural = arg3;\n  } else if (isString(arg3)) {\n    options.default = arg3;\n  } else if (isPlainObject(arg3)) {\n    assign(options, arg3);\n  }\n  return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n  return {\n    locale,\n    key,\n    warnHtmlMessage,\n    onError: err => {\n      onError && onError(err);\n      if (process.env.NODE_ENV !== 'production') {\n        const _source = getSourceForCodeFrame(source);\n        const message = `Message compilation error: ${err.message}`;\n        const codeFrame = err.location && _source && generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n        const emitter = context.__v_emitter;\n        if (emitter && _source) {\n          emitter.emit('compile-error', {\n            message: _source,\n            error: err.message,\n            start: err.location && err.location.start.offset,\n            end: err.location && err.location.end.offset,\n            groupId: `${'translate'}:${key}`\n          });\n        }\n        console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n      } else {\n        throw err;\n      }\n    },\n    onCacheKey: source => generateFormatCacheKey(locale, key, source)\n  };\n}\nfunction getSourceForCodeFrame(source) {\n  if (isString(source)) {\n    return source;\n  } else {\n    if (source.loc && source.loc.source) {\n      return source.loc.source;\n    }\n  }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n  const {\n    modifiers,\n    pluralRules,\n    messageResolver: resolveValue,\n    fallbackLocale,\n    fallbackWarn,\n    missingWarn,\n    fallbackContext\n  } = context;\n  const resolveMessage = (key, useLinked) => {\n    let val = resolveValue(message, key);\n    // fallback\n    if (val == null && (fallbackContext || useLinked)) {\n      const [,, message] = resolveMessageFormat(fallbackContext || context,\n      // NOTE: if has fallbackContext, fallback to root, else if use linked, fallback to local context\n      key, locale, fallbackLocale, fallbackWarn, missingWarn);\n      val = resolveValue(message, key);\n    }\n    if (isString(val) || isMessageAST(val)) {\n      let occurred = false;\n      const onError = () => {\n        occurred = true;\n      };\n      const msg = compileMessageFormat(context, key, locale, val, key, onError);\n      return !occurred ? msg : NOOP_MESSAGE_FUNCTION;\n    } else if (isMessageFunction(val)) {\n      return val;\n    } else {\n      // TODO: should be implemented warning message\n      return NOOP_MESSAGE_FUNCTION;\n    }\n  };\n  const ctxOptions = {\n    locale,\n    modifiers,\n    pluralRules,\n    messages: resolveMessage\n  };\n  if (context.processor) {\n    ctxOptions.processor = context.processor;\n  }\n  if (options.list) {\n    ctxOptions.list = options.list;\n  }\n  if (options.named) {\n    ctxOptions.named = options.named;\n  }\n  if (isNumber(options.plural)) {\n    ctxOptions.pluralIndex = options.plural;\n  }\n  return ctxOptions;\n}\n{\n  initFeatureFlags();\n}\nexport { CORE_ERROR_CODES_EXTEND_POINT, CORE_WARN_CODES_EXTEND_POINT, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getLocaleMessage, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, setLocaleMessage, translate, translateDevTools, updateFallbackLocale };","map":{"version":3,"names":["getGlobalThis","hasOwn","isNumber","create","isObject","isString","isBoolean","warn","format","format$1","isFunction","isPromise","isArray","isPlainObject","assign","isRegExp","warnOnce","deepCopy","isEmptyObject","isDate","join","toDisplayString","escapeHtml","inBrowser","mark","measure","generateCodeFrame","generateFormatCacheKey","detectHtmlTag","defaultOnError","createParser","optimize","mangle","createCompileError","COMPILE_ERROR_CODES_EXTEND_POINT","initFeatureFlags","__INTLIFY_PROD_DEVTOOLS__","__INTLIFY_DROP_MESSAGE_COMPILER__","ast","msg","ctx","formatParts","body","resolveBody","createUnhandleNodeError","type","resolveType","plural","cases","resolveCases","reduce","messages","c","formatMessageParts","PROPS_BODY","node","resolveProps","PROPS_CASES","static_","resolveStatic","normalize","resolveItems","acm","formatMessagePart","PROPS_STATIC","PROPS_ITEMS","resolveValue$1","named","k","interpolate","key","list","i","index","linked","modifier","resolveLinkedModifier","resolveLinkedKey","undefined","Error","PROPS_TYPE","PROPS_VALUE","resolved","PROPS_MODIFIER","PROPS_KEY","props","defaultValue","length","prop","WARN_MESSAGE","checkHtmlMessage","source","warnHtmlMessage","defaultOnCacheKey","message","compileCache","clearCompileCache","isMessageAST","val","baseCompile","options","detectError","onError","err","parser","parse","code","compile","context","process","env","NODE_ENV","onCacheKey","cacheKey","cached","location","devtools","setDevToolsHook","hook","getDevToolsHook","initI18nDevTools","i18n","version","meta","emit","timestamp","Date","now","translateDevTools","createDevToolsHook","payloads","CoreErrorCodes","INVALID_ARGUMENT","INVALID_DATE_ARGUMENT","INVALID_ISO_DATE_ARGUMENT","NOT_SUPPORT_NON_STRING_MESSAGE","NOT_SUPPORT_LOCALE_PROMISE_VALUE","NOT_SUPPORT_LOCALE_ASYNC_FUNCTION","NOT_SUPPORT_LOCALE_TYPE","CORE_ERROR_CODES_EXTEND_POINT","createCoreError","errorMessages","getLocale","locale","resolveLocale","_resolveLocale","resolvedOnce","constructor","name","resolve","fallbackWithSimple","fallback","start","Set","Object","keys","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","__localeChainCache","Map","chain","get","block","appendBlockToChain","defaults","set","blocks","follow","appendLocaleToChain","tokens","split","target","appendItemToChain","splice","includes","replace","push","pathStateMachine","literalValueRE","isLiteral","exp","test","stripQuotes","str","a","charCodeAt","b","slice","getPathCharType","ch","formatSubPath","path","trimmed","trim","charAt","isNaN","parseInt","mode","subPathDepth","newChar","transition","action","typeMap","actions","maybeUnescapeQuote","nextChar","cache","resolveWithKeyValue","obj","resolveValue","hit","len","last","CoreWarnCodes","NOT_FOUND_KEY","FALLBACK_TO_TRANSLATE","CANNOT_FORMAT_NUMBER","FALLBACK_TO_NUMBER_FORMAT","CANNOT_FORMAT_DATE","FALLBACK_TO_DATE_FORMAT","EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER","CORE_WARN_CODES_EXTEND_POINT","warnMessages","getWarnMessage","args","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","toLocaleUpperCase","substr","getDefaultLinkedModifiers","upper","toUpperCase","children","lower","toLowerCase","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","onWarn","_locale","fallbackLocale","createResources","datetimeFormats","numberFormats","modifiers","pluralRules","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","processor","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","internalOptions","__datetimeFormatters","__numberFormatters","__meta","cid","__v_emitter","getLocaleMessage","src","dest","setLocaleMessage","isTranslateFallbackWarn","RegExp","isTranslateMissingWarn","handleMissing","emitter","groupId","ret","updateFallbackLocale","isAlmostSameLocale","compareLocale","isImplicitFallback","targetLocale","locales","indexOf","intlDefined","Intl","Availabilities","dateTimeFormat","DateTimeFormat","numberFormat","NumberFormat","datetime","value","overrides","parseDateTimeArgs","part","datetimeFormat","from","to","id","JSON","stringify","formatter","formatToParts","DATETIME_FORMAT_OPTIONS_KEYS","arg1","arg2","arg3","arg4","matches","match","dateTime","startsWith","toISOString","getTime","forEach","clearDateTimeFormat","has","delete","number","parseNumberArgs","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat","DEFAULT_MODIFIER","DEFAULT_MESSAGE","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","values","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","Math","abs","min","getPluralIndex","pluralIndex","count","n","normalizeNamed","createMessageContext","pluralRule","orgPluralRule","_list","_named","useLinked","parent","_modifier","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","escapeParams","formatScope","resolveMessageFormat","cacheBaseKey","occurred","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","map","item","startTag","endTag","window","performance","end","time","missingRet","getCompileContext","msgCtx","String","_source","getSourceForCodeFrame","codeFrame","offset","error","console","loc","resolveMessage"],"sources":["C:/Users/Administrator/Desktop/flyboot/node_modules/@intlify/core-base/dist/core-base.js"],"sourcesContent":["/*!\n  * core-base v12.0.0-alpha.2\n  * (c) 2016-present kazuya kawaguchi and contributors\n  * Released under the MIT License.\n  */\nimport { getGlobalThis, hasOwn, isNumber, create, isObject, isString, isBoolean, warn, format as format$1, isFunction, isPromise, isArray, isPlainObject, assign, isRegExp, warnOnce, deepCopy, isEmptyObject, isDate, join, toDisplayString, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey } from '@intlify/shared';\nimport { detectHtmlTag, defaultOnError, createParser, optimize, mangle, createCompileError, COMPILE_ERROR_CODES_EXTEND_POINT } from '@intlify/message-compiler';\nexport { createCompileError } from '@intlify/message-compiler';\n\n/**\n * This is only called in esm-bundler builds.\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n    }\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n    }\n}\n\nfunction format(ast) {\n    const msg = (ctx) => formatParts(ctx, ast);\n    return msg;\n}\nfunction formatParts(ctx, ast) {\n    const body = resolveBody(ast);\n    if (body == null) {\n        throw createUnhandleNodeError(0 /* NodeTypes.Resource */);\n    }\n    const type = resolveType(body);\n    if (type === 1 /* NodeTypes.Plural */) {\n        const plural = body;\n        const cases = resolveCases(plural);\n        return ctx.plural(cases.reduce((messages, c) => [\n            ...messages,\n            formatMessageParts(ctx, c)\n        ], []));\n    }\n    else {\n        return formatMessageParts(ctx, body);\n    }\n}\nconst PROPS_BODY = ['b', 'body'];\nfunction resolveBody(node) {\n    return resolveProps(node, PROPS_BODY);\n}\nconst PROPS_CASES = ['c', 'cases'];\nfunction resolveCases(node) {\n    return resolveProps(node, PROPS_CASES, []);\n}\nfunction formatMessageParts(ctx, node) {\n    const static_ = resolveStatic(node);\n    if (static_ != null) {\n        return ctx.type === 'text'\n            ? static_\n            : ctx.normalize([static_]);\n    }\n    else {\n        const messages = resolveItems(node).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n        return ctx.normalize(messages);\n    }\n}\nconst PROPS_STATIC = ['s', 'static'];\nfunction resolveStatic(node) {\n    return resolveProps(node, PROPS_STATIC);\n}\nconst PROPS_ITEMS = ['i', 'items'];\nfunction resolveItems(node) {\n    return resolveProps(node, PROPS_ITEMS, []);\n}\nfunction formatMessagePart(ctx, node) {\n    const type = resolveType(node);\n    switch (type) {\n        case 3 /* NodeTypes.Text */: {\n            return resolveValue$1(node, type);\n        }\n        case 9 /* NodeTypes.Literal */: {\n            return resolveValue$1(node, type);\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            if (hasOwn(named, 'k') && named.k) {\n                return ctx.interpolate(ctx.named(named.k));\n            }\n            if (hasOwn(named, 'key') && named.key) {\n                return ctx.interpolate(ctx.named(named.key));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            if (hasOwn(list, 'i') && isNumber(list.i)) {\n                return ctx.interpolate(ctx.list(list.i));\n            }\n            if (hasOwn(list, 'index') && isNumber(list.index)) {\n                return ctx.interpolate(ctx.list(list.index));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            const modifier = resolveLinkedModifier(linked);\n            const key = resolveLinkedKey(linked);\n            return ctx.linked(formatMessagePart(ctx, key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n        }\n        case 7 /* NodeTypes.LinkedKey */: {\n            return resolveValue$1(node, type);\n        }\n        case 8 /* NodeTypes.LinkedModifier */: {\n            return resolveValue$1(node, type);\n        }\n        default:\n            throw new Error(`unhandled node on format message part: ${type}`);\n    }\n}\nconst PROPS_TYPE = ['t', 'type'];\nfunction resolveType(node) {\n    return resolveProps(node, PROPS_TYPE);\n}\nconst PROPS_VALUE = ['v', 'value'];\nfunction resolveValue$1(node, type) {\n    const resolved = resolveProps(node, PROPS_VALUE);\n    if (resolved != null) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(type);\n    }\n}\nconst PROPS_MODIFIER = ['m', 'modifier'];\nfunction resolveLinkedModifier(node) {\n    return resolveProps(node, PROPS_MODIFIER);\n}\nconst PROPS_KEY = ['k', 'key'];\nfunction resolveLinkedKey(node) {\n    const resolved = resolveProps(node, PROPS_KEY);\n    if (resolved) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(6 /* NodeTypes.Linked */);\n    }\n}\nfunction resolveProps(node, props, defaultValue) {\n    for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (hasOwn(node, prop) && node[prop] != null) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return node[prop];\n        }\n    }\n    return defaultValue;\n}\nfunction createUnhandleNodeError(type) {\n    return new Error(`unhandled node type: ${type}`);\n}\n\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n    if (warnHtmlMessage && detectHtmlTag(source)) {\n        warn(format$1(WARN_MESSAGE, { source }));\n    }\n}\nconst defaultOnCacheKey = (message) => message;\nlet compileCache = create();\nfunction clearCompileCache() {\n    compileCache = create();\n}\nfunction isMessageAST(val) {\n    return (isObject(val) &&\n        resolveType(val) === 0 &&\n        (hasOwn(val, 'b') || hasOwn(val, 'body')));\n}\nfunction baseCompile(message, options = {}) {\n    // error detecting on compile\n    let detectError = false;\n    const onError = options.onError || defaultOnError;\n    options.onError = (err) => {\n        detectError = true;\n        onError(err);\n    };\n    // parse source codes\n    const parser = createParser(options);\n    const ast = parser.parse(message);\n    // optimize ASTs\n    options.optimize && optimize(ast);\n    // minimize ASTs\n    options.mangle && mangle(ast);\n    return { ast, detectError, code: '' };\n}\n/* #__NO_SIDE_EFFECTS__ */\nfunction compile(message, context) {\n    if ((!__INTLIFY_DROP_MESSAGE_COMPILER__) &&\n        isString(message)) {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile message\n        const { ast, detectError } = baseCompile(message, {\n            ...context,\n            location: (process.env.NODE_ENV !== 'production'),\n            mangle: !(process.env.NODE_ENV !== 'production'),\n            optimize: !(process.env.NODE_ENV !== 'production')\n        });\n        // compose message function from AST\n        const msg = format(ast);\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n            return (() => message);\n        }\n        // AST case (passed from bundler)\n        const cacheKey = message.cacheKey;\n        if (cacheKey) {\n            const cached = compileCache[cacheKey];\n            if (cached) {\n                return cached;\n            }\n            // compose message function from message (AST)\n            return (compileCache[cacheKey] =\n                format(message));\n        }\n        else {\n            return format(message);\n        }\n    }\n}\n\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n    devtools = hook;\n}\nfunction getDevToolsHook() {\n    return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n    // TODO: queue if devtools is undefined\n    devtools &&\n        devtools.emit('i18n:init', {\n            timestamp: Date.now(),\n            i18n,\n            version,\n            meta\n        });\n}\nconst translateDevTools = \n/* #__PURE__*/ createDevToolsHook('function:translate');\nfunction createDevToolsHook(hook) {\n    return (payloads) => devtools && devtools.emit(hook, payloads);\n}\n\nconst CoreErrorCodes = {\n    INVALID_ARGUMENT: COMPILE_ERROR_CODES_EXTEND_POINT, // 17\n    INVALID_DATE_ARGUMENT: 18,\n    INVALID_ISO_DATE_ARGUMENT: 19,\n    NOT_SUPPORT_NON_STRING_MESSAGE: 20,\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: 21,\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: 22,\n    NOT_SUPPORT_LOCALE_TYPE: 23\n};\nconst CORE_ERROR_CODES_EXTEND_POINT = 24;\nfunction createCoreError(code) {\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\n        'Make sure your Date represents a valid date.',\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n    return options.locale != null\n        ? resolveLocale(options.locale)\n        : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n    if (isString(locale)) {\n        return locale;\n    }\n    else {\n        if (isFunction(locale)) {\n            if (locale.resolvedOnce && _resolveLocale != null) {\n                return _resolveLocale;\n            }\n            else if (locale.constructor.name === 'Function') {\n                const resolve = locale();\n                if (isPromise(resolve)) {\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n                }\n                return (_resolveLocale = resolve);\n            }\n            else {\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n            }\n        }\n        else {\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n        }\n    }\n}\n/**\n * Fallback with simple implemenation\n *\n * @remarks\n * A fallback locale function implemented with a simple fallback algorithm.\n *\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithSimple(ctx, fallback, start) {\n    // prettier-ignore\n    return [...new Set([\n            start,\n            ...(isArray(fallback)\n                ? fallback\n                : isObject(fallback)\n                    ? Object.keys(fallback)\n                    : isString(fallback)\n                        ? [fallback]\n                        : [start])\n        ])];\n}\n/**\n * Fallback with locale chain\n *\n * @remarks\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nSee [Fallbacking](../../guide/essentials/fallback)\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n    const context = ctx;\n    if (!context.__localeChainCache) {\n        context.__localeChainCache = new Map();\n    }\n    let chain = context.__localeChainCache.get(startLocale);\n    if (!chain) {\n        chain = [];\n        // first block defined by start\n        let block = [start];\n        // while any intervening block found\n        while (isArray(block)) {\n            block = appendBlockToChain(chain, block, fallback);\n        }\n        // prettier-ignore\n        // last block defined by default\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\n            ? fallback\n            : fallback['default']\n                ? fallback['default']\n                : null;\n        // convert defaults to array\n        block = isString(defaults) ? [defaults] : defaults;\n        if (isArray(block)) {\n            appendBlockToChain(chain, block, false);\n        }\n        context.__localeChainCache.set(startLocale, chain);\n    }\n    return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n    let follow = true;\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\n        const locale = block[i];\n        if (isString(locale)) {\n            follow = appendLocaleToChain(chain, block[i], blocks);\n        }\n    }\n    return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n    let follow;\n    const tokens = locale.split('-');\n    do {\n        const target = tokens.join('-');\n        follow = appendItemToChain(chain, target, blocks);\n        tokens.splice(-1, 1);\n    } while (tokens.length && follow === true);\n    return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n    let follow = false;\n    if (!chain.includes(target)) {\n        follow = true;\n        if (target) {\n            follow = target[target.length - 1] !== '!';\n            const locale = target.replace(/!/g, '');\n            chain.push(locale);\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n            ) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                follow = blocks[locale];\n            }\n        }\n    }\n    return follow;\n}\n\nconst pathStateMachine = [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\n        4 /* States.IN_SUB_PATH */,\n        2 /* Actions.INC_SUB_PATH_DEPTH */\n    ],\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\n * Check if an expression is a literal value.\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n    return literalValueRE.test(exp);\n}\n/**\n * Strip quotes from a string\n */\nfunction stripQuotes(str) {\n    const a = str.charCodeAt(0);\n    const b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\n * Determine the type of a character in a keypath.\n */\nfunction getPathCharType(ch) {\n    if (ch === undefined || ch === null) {\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\n    }\n    const code = ch.charCodeAt(0);\n    switch (code) {\n        case 0x5b: // [\n        case 0x5d: // ]\n        case 0x2e: // .\n        case 0x22: // \"\n        case 0x27: // '\n            return ch;\n        case 0x5f: // _\n        case 0x24: // $\n        case 0x2d: // -\n            return \"i\" /* PathCharTypes.IDENT */;\n        case 0x09: // Tab (HT)\n        case 0x0a: // Newline (LF)\n        case 0x0d: // Return (CR)\n        case 0xa0: // No-break space (NBSP)\n        case 0xfeff: // Byte Order Mark (BOM)\n        case 0x2028: // Line Separator (LS)\n        case 0x2029: // Paragraph Separator (PS)\n            return \"w\" /* PathCharTypes.WORKSPACE */;\n    }\n    return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\nfunction formatSubPath(path) {\n    const trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n        return false;\n    }\n    return isLiteral(trimmed)\n        ? stripQuotes(trimmed)\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\n * Parse a string path into an array of segments\n */\nfunction parse(path) {\n    const keys = [];\n    let index = -1;\n    let mode = 0 /* States.BEFORE_PATH */;\n    let subPathDepth = 0;\n    let c;\n    let key; // eslint-disable-line\n    let newChar;\n    let type;\n    let transition;\n    let action;\n    let typeMap;\n    const actions = [];\n    actions[0 /* Actions.APPEND */] = () => {\n        if (key === undefined) {\n            key = newChar;\n        }\n        else {\n            key += newChar;\n        }\n    };\n    actions[1 /* Actions.PUSH */] = () => {\n        if (key !== undefined) {\n            keys.push(key);\n            key = undefined;\n        }\n    };\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n        actions[0 /* Actions.APPEND */]();\n        subPathDepth++;\n    };\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n        if (subPathDepth > 0) {\n            subPathDepth--;\n            mode = 4 /* States.IN_SUB_PATH */;\n            actions[0 /* Actions.APPEND */]();\n        }\n        else {\n            subPathDepth = 0;\n            if (key === undefined) {\n                return false;\n            }\n            key = formatSubPath(key);\n            if (key === false) {\n                return false;\n            }\n            else {\n                actions[1 /* Actions.PUSH */]();\n            }\n        }\n    };\n    function maybeUnescapeQuote() {\n        const nextChar = path[index + 1];\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\n            index++;\n            newChar = '\\\\' + nextChar;\n            actions[0 /* Actions.APPEND */]();\n            return true;\n        }\n    }\n    while (mode !== null) {\n        index++;\n        c = path[index];\n        if (c === '\\\\' && maybeUnescapeQuote()) {\n            continue;\n        }\n        type = getPathCharType(c);\n        typeMap = pathStateMachine[mode];\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n        // check parse error\n        if (transition === 8 /* States.ERROR */) {\n            return;\n        }\n        mode = transition[0];\n        if (transition[1] !== undefined) {\n            action = actions[transition[1]];\n            if (action) {\n                newChar = c;\n                if (action() === false) {\n                    return;\n                }\n            }\n        }\n        // check parse finish\n        if (mode === 7 /* States.AFTER_PATH */) {\n            return keys;\n        }\n    }\n}\n// path token cache\nconst cache = new Map();\n/**\n * key-value message resolver\n *\n * @remarks\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveWithKeyValue(obj, path) {\n    return isObject(obj) ? obj[path] : null;\n}\n/**\n * message resolver\n *\n * @remarks\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveValue(obj, path) {\n    // check object\n    if (!isObject(obj)) {\n        return null;\n    }\n    // parse path\n    let hit = cache.get(path);\n    if (!hit) {\n        hit = parse(path);\n        if (hit) {\n            cache.set(path, hit);\n        }\n    }\n    // check hit\n    if (!hit) {\n        return null;\n    }\n    // resolve path value\n    const len = hit.length;\n    let last = obj;\n    let i = 0;\n    while (i < len) {\n        const val = last[hit[i]];\n        if (val === undefined) {\n            return null;\n        }\n        if (isFunction(last)) {\n            return null;\n        }\n        last = val;\n        i++;\n    }\n    return last;\n}\n\nconst CoreWarnCodes = {\n    NOT_FOUND_KEY: 1,\n    FALLBACK_TO_TRANSLATE: 2,\n    CANNOT_FORMAT_NUMBER: 3,\n    FALLBACK_TO_NUMBER_FORMAT: 4,\n    CANNOT_FORMAT_DATE: 5,\n    FALLBACK_TO_DATE_FORMAT: 6,\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7\n};\nconst CORE_WARN_CODES_EXTEND_POINT = 8;\n/** @internal */\nconst warnMessages = {\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n    return format$1(warnMessages[code], ...args);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Intlify core-base version\n * @internal\n */\nconst VERSION = '12.0.0-alpha.2';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n    return {\n        upper: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toUpperCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toUpperCase()\n                    : val;\n        },\n        lower: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toLowerCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toLowerCase()\n                    : val;\n        },\n        capitalize: (val, type) => {\n            // prettier-ignore\n            return (type === 'text' && isString(val)\n                ? capitalize(val)\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? capitalize(val.children)\n                    : val);\n        }\n    };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n    _compiler = compiler;\n}\nlet _resolver;\n/**\n * Register the message resolver\n *\n * @param resolver - A {@link MessageResolver} function\n *\n * @VueI18nGeneral\n */\nfunction registerMessageResolver(resolver) {\n    _resolver = resolver;\n}\nlet _fallbacker;\n/**\n * Register the locale fallbacker\n *\n * @param fallbacker - A {@link LocaleFallbacker} function\n *\n * @VueI18nGeneral\n */\nfunction registerLocaleFallbacker(fallbacker) {\n    _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = (meta) => {\n    _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = (context) => {\n    _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n    // setup options\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n    const version = isString(options.version) ? options.version : VERSION;\n    const locale = isString(options.locale) || isFunction(options.locale)\n        ? options.locale\n        : DEFAULT_LOCALE;\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n    const fallbackLocale = isArray(options.fallbackLocale) ||\n        isPlainObject(options.fallbackLocale) ||\n        isString(options.fallbackLocale) ||\n        options.fallbackLocale === false\n        ? options.fallbackLocale\n        : _locale;\n    const messages = isPlainObject(options.messages)\n        ? options.messages\n        : createResources(_locale);\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\n            ? options.datetimeFormats\n            : createResources(_locale)\n        ;\n    const numberFormats = isPlainObject(options.numberFormats)\n            ? options.numberFormats\n            : createResources(_locale)\n        ;\n    const modifiers = assign(create(), options.modifiers, getDefaultLinkedModifiers());\n    const pluralRules = options.pluralRules || create();\n    const missing = isFunction(options.missing) ? options.missing : null;\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\n        ? options.missingWarn\n        : true;\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\n        ? options.fallbackWarn\n        : true;\n    const fallbackFormat = !!options.fallbackFormat;\n    const unresolving = !!options.unresolving;\n    const postTranslation = isFunction(options.postTranslation)\n        ? options.postTranslation\n        : null;\n    const processor = isPlainObject(options.processor) ? options.processor : null;\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\n        ? options.warnHtmlMessage\n        : true;\n    const escapeParameter = !!options.escapeParameter;\n    const messageCompiler = isFunction(options.messageCompiler)\n        ? options.messageCompiler\n        : _compiler;\n    if ((process.env.NODE_ENV !== 'production') &&\n        !false &&\n        !false &&\n        isFunction(options.messageCompiler)) {\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n    }\n    const messageResolver = isFunction(options.messageResolver)\n        ? options.messageResolver\n        : _resolver || resolveWithKeyValue;\n    const localeFallbacker = isFunction(options.localeFallbacker)\n        ? options.localeFallbacker\n        : _fallbacker || fallbackWithSimple;\n    const fallbackContext = isObject(options.fallbackContext)\n        ? options.fallbackContext\n        : undefined;\n    // setup internal options\n    const internalOptions = options;\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\n            ? internalOptions.__datetimeFormatters\n            : new Map()\n        ;\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\n            ? internalOptions.__numberFormatters\n            : new Map()\n        ;\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n    _cid++;\n    const context = {\n        version,\n        cid: _cid,\n        locale,\n        fallbackLocale,\n        messages,\n        modifiers,\n        pluralRules,\n        missing,\n        missingWarn,\n        fallbackWarn,\n        fallbackFormat,\n        unresolving,\n        postTranslation,\n        processor,\n        warnHtmlMessage,\n        escapeParameter,\n        messageCompiler,\n        messageResolver,\n        localeFallbacker,\n        fallbackContext,\n        onWarn,\n        __meta\n    };\n    {\n        context.datetimeFormats = datetimeFormats;\n        context.numberFormats = numberFormats;\n        context.__datetimeFormatters = __datetimeFormatters;\n        context.__numberFormatters = __numberFormatters;\n    }\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.__v_emitter =\n            internalOptions.__v_emitter != null\n                ? internalOptions.__v_emitter\n                : undefined;\n    }\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        initI18nDevTools(context, version, __meta);\n    }\n    return context;\n}\nconst createResources = (locale) => ({ [locale]: create() });\n// TODO: API documentation, if `@intlify/core` will be documented as a separate package\nfunction getLocaleMessage(ctx, locale) {\n    const src = ctx.messages[locale];\n    if (src == null) {\n        return undefined;\n    }\n    const dest = create();\n    deepCopy(src, dest);\n    return dest;\n}\n// TODO: API documentation, if `@intlify/core` will be documented as a separate package\nfunction setLocaleMessage(ctx, locale, messages) {\n    ctx.messages[locale] = messages;\n}\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n    return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n    const { missing, onWarn } = context;\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        const emitter = context.__v_emitter;\n        if (emitter) {\n            emitter.emit('missing', {\n                locale,\n                key,\n                type,\n                groupId: `${type}:${key}`\n            });\n        }\n    }\n    if (missing !== null) {\n        const ret = missing(context, locale, key, type);\n        return isString(ret) ? ret : key;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\n        }\n        return key;\n    }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n    const context = ctx;\n    context.__localeChainCache = new Map();\n    ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n    if (locale === compareLocale)\n        return false;\n    return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n    const index = locales.indexOf(targetLocale);\n    if (index === -1) {\n        return false;\n    }\n    for (let i = index + 1; i < locales.length; i++) {\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __datetimeFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let datetimeFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'datetime format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        datetimeFormat =\n            datetimeFormats[targetLocale] || {};\n        format = datetimeFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __datetimeFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n        __datetimeFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'formatMatcher',\n    'hour12',\n    'timeZone',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    'dayPeriod',\n    'numberingSystem',\n    'hourCycle',\n    'fractionalSecondDigits'\n];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    let value;\n    if (isString(arg1)) {\n        // Only allow ISO strings - other date formats are often supported,\n        // but may cause different results in different browsers.\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n        if (!matches) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n        // Some browsers can not parse the iso datetime separated by space,\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\n        const dateTime = matches[3]\n            ? matches[3].trim().startsWith('T')\n                ? `${matches[1].trim()}${matches[3].trim()}`\n                : `${matches[1].trim()}T${matches[3].trim()}`\n            : matches[1].trim();\n        value = new Date(dateTime);\n        try {\n            // This will fail if the date is not valid\n            value.toISOString();\n        }\n        catch {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n    }\n    else if (isDate(arg1)) {\n        if (isNaN(arg1.getTime())) {\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n        }\n        value = arg1;\n    }\n    else if (isNumber(arg1)) {\n        value = arg1;\n    }\n    else {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__datetimeFormatters.has(id)) {\n            continue;\n        }\n        context.__datetimeFormatters.delete(id);\n    }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __numberFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseNumberArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.NumberFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let numberFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'number format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        numberFormat =\n            numberFormats[targetLocale] || {};\n        format = numberFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __numberFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n        __numberFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'currencySign',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    'compactDisplay',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'roundingMode',\n    'roundingPriority',\n    'roundingIncrement',\n    'trailingZeroDisplay'\n];\n/** @internal */\nfunction parseNumberArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    if (!isNumber(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    const value = arg1;\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__numberFormatters.has(id)) {\n            continue;\n        }\n        context.__numberFormatters.delete(id);\n    }\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n    choice = Math.abs(choice);\n    if (choicesLength === 2) {\n        // prettier-ignore\n        return choice\n            ? choice > 1\n                ? 1\n                : 0\n            : 1;\n    }\n    return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n    // prettier-ignore\n    const index = isNumber(options.pluralIndex)\n        ? options.pluralIndex\n        : -1;\n    // prettier-ignore\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\n        ? isNumber(options.named.count)\n            ? options.named.count\n            : isNumber(options.named.n)\n                ? options.named.n\n                : index\n        : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n    if (!props.count) {\n        props.count = pluralIndex;\n    }\n    if (!props.n) {\n        props.n = pluralIndex;\n    }\n}\nfunction createMessageContext(options = {}) {\n    const locale = options.locale;\n    const pluralIndex = getPluralIndex(options);\n    const pluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? options.pluralRules[locale]\n        : pluralDefault;\n    const orgPluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? pluralDefault\n        : undefined;\n    const plural = (messages) => {\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n    };\n    const _list = options.list || [];\n    const list = (index) => _list[index];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const _named = options.named || create();\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n    const named = (key) => _named[key];\n    function message(key, useLinked) {\n        // prettier-ignore\n        const msg = isFunction(options.messages)\n            ? options.messages(key, !!useLinked)\n            : isObject(options.messages)\n                ? options.messages[key]\n                : false;\n        return !msg\n            ? options.parent\n                ? options.parent.message(key) // resolve from parent messages\n                : DEFAULT_MESSAGE\n            : msg;\n    }\n    const _modifier = (name) => options.modifiers\n        ? options.modifiers[name]\n        : DEFAULT_MODIFIER;\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\n        ? options.processor.normalize\n        : DEFAULT_NORMALIZE;\n    const interpolate = isPlainObject(options.processor) &&\n        isFunction(options.processor.interpolate)\n        ? options.processor.interpolate\n        : DEFAULT_INTERPOLATE;\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\n        ? options.processor.type\n        : DEFAULT_MESSAGE_DATA_TYPE;\n    const linked = (key, ...args) => {\n        const [arg1, arg2] = args;\n        let type = 'text';\n        let modifier = '';\n        if (args.length === 1) {\n            if (isObject(arg1)) {\n                modifier = arg1.modifier || modifier;\n                type = arg1.type || type;\n            }\n            else if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n        }\n        else if (args.length === 2) {\n            if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n            if (isString(arg2)) {\n                type = arg2 || type;\n            }\n        }\n        const ret = message(key, true)(ctx);\n        const msg = \n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\n        type === 'vnode' && isArray(ret) && modifier\n            ? ret[0]\n            : ret;\n        return modifier ? _modifier(modifier)(msg, type) : msg;\n    };\n    const ctx = {\n        [\"list\" /* HelperNameMap.LIST */]: list,\n        [\"named\" /* HelperNameMap.NAMED */]: named,\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\n        [\"type\" /* HelperNameMap.TYPE */]: type,\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n        [\"values\" /* HelperNameMap.VALUES */]: assign(create(), _list, _named)\n    };\n    return ctx;\n}\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = (val) => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\n    const [key, options] = parseTranslateArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const escapeParameter = isBoolean(options.escapeParameter)\n        ? options.escapeParameter\n        : context.escapeParameter;\n    const resolvedMessage = !!options.resolvedMessage;\n    // prettier-ignore\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n        ? !isBoolean(options.default)\n            ? options.default\n            : (!messageCompiler ? () => key : key)\n        : fallbackFormat // default by `fallbackFormat` option\n            ? (!messageCompiler ? () => key : key)\n            : null;\n    const enableDefaultMsg = fallbackFormat ||\n        (defaultMsgOrKey != null &&\n            (isString(defaultMsgOrKey) || isFunction(defaultMsgOrKey)));\n    const locale = getLocale(context, options);\n    // escape params\n    escapeParameter && escapeParams(options);\n    // resolve message format\n    // eslint-disable-next-line prefer-const\n    let [formatScope, targetLocale, message] = !resolvedMessage\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\n        : [\n            key,\n            locale,\n            messages[locale] || create()\n        ];\n    // NOTE:\n    //  Fix to work around `ssrTransfrom` bug in Vite.\n    //  https://github.com/vitejs/vite/issues/4306\n    //  To get around this, use temporary variables.\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n    let format = formatScope;\n    // if you use default message, set it as message format!\n    let cacheBaseKey = key;\n    if (!resolvedMessage &&\n        !(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format))) {\n        if (enableDefaultMsg) {\n            format = defaultMsgOrKey;\n            cacheBaseKey = format;\n        }\n    }\n    // checking message format and target locale\n    if (!resolvedMessage &&\n        (!(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format)) ||\n            !isString(targetLocale))) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    // TODO: refactor\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\n        warn(`The message format compilation is not supported in this build. ` +\n            `Because message compiler isn't included. ` +\n            `You need to pre-compilation all message format. ` +\n            `So translate function return '${key}'.`);\n        return key;\n    }\n    // setup compile error detecting\n    let occurred = false;\n    const onError = () => {\n        occurred = true;\n    };\n    // compile message format\n    const msg = !isMessageFunction(format)\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\n        : format;\n    // if occurred compile error, return the message format\n    if (occurred) {\n        return format;\n    }\n    // evaluate message with context\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n    const msgContext = createMessageContext(ctxOptions);\n    const messaged = evaluateMessage(context, msg, msgContext);\n    // if use post translation option, proceed it with handler\n    const ret = postTranslation\n        ? postTranslation(messaged, key)\n        : messaged;\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        // prettier-ignore\n        const payloads = {\n            timestamp: Date.now(),\n            key: isString(key)\n                ? key\n                : isMessageFunction(format)\n                    ? format.key\n                    : '',\n            locale: targetLocale || (isMessageFunction(format)\n                ? format.locale\n                : ''),\n            format: isString(format)\n                ? format\n                : isMessageFunction(format)\n                    ? format.source\n                    : '',\n            message: ret\n        };\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n        translateDevTools(payloads);\n    }\n    return ret;\n}\nfunction escapeParams(options) {\n    if (isArray(options.list)) {\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n    }\n    else if (isObject(options.named)) {\n        Object.keys(options.named).forEach(key => {\n            if (isString(options.named[key])) {\n                options.named[key] = escapeHtml(options.named[key]);\n            }\n        });\n    }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n    let message = create();\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'translate';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            !isAlmostSameLocale(locale, targetLocale) &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        message =\n            messages[targetLocale] || create();\n        // for vue-devtools timeline event\n        let start = null;\n        let startTag;\n        let endTag;\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            start = window.performance.now();\n            startTag = 'intlify-message-resolve-start';\n            endTag = 'intlify-message-resolve-end';\n            mark && mark(startTag);\n        }\n        if ((format = resolveValue(message, key)) === null) {\n            // if null, resolve with object key path\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            const end = window.performance.now();\n            const emitter = context.__v_emitter;\n            if (emitter && start && format) {\n                emitter.emit('message-resolve', {\n                    type: 'message-resolve',\n                    key,\n                    message: format,\n                    time: end - start,\n                    groupId: `${type}:${key}`\n                });\n            }\n            if (startTag && endTag && mark && measure) {\n                mark(endTag);\n                measure('intlify message resolve', startTag, endTag);\n            }\n        }\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n            break;\n        }\n        if (!isImplicitFallback(targetLocale, locales)) {\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n            key, targetLocale, missingWarn, type);\n            if (missingRet !== key) {\n                format = missingRet;\n            }\n        }\n        from = to;\n    }\n    return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n    const { messageCompiler, warnHtmlMessage } = context;\n    if (isMessageFunction(format)) {\n        const msg = format;\n        msg.locale = msg.locale || targetLocale;\n        msg.key = msg.key || key;\n        return msg;\n    }\n    if (messageCompiler == null) {\n        const msg = (() => format);\n        msg.locale = targetLocale;\n        msg.key = key;\n        return msg;\n    }\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-compilation-start';\n        endTag = 'intlify-message-compilation-end';\n        mark && mark(startTag);\n    }\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit('message-compilation', {\n                type: 'message-compilation',\n                message: format,\n                time: end - start,\n                groupId: `${'translate'}:${key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message compilation', startTag, endTag);\n        }\n    }\n    msg.locale = targetLocale;\n    msg.key = key;\n    msg.source = format;\n    return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-evaluation-start';\n        endTag = 'intlify-message-evaluation-end';\n        mark && mark(startTag);\n    }\n    const messaged = msg(msgCtx);\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit('message-evaluation', {\n                type: 'message-evaluation',\n                value: messaged,\n                time: end - start,\n                groupId: `${'translate'}:${msg.key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message evaluation', startTag, endTag);\n        }\n    }\n    return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n    const [arg1, arg2, arg3] = args;\n    const options = create();\n    if (!isString(arg1) &&\n        !isNumber(arg1) &&\n        !isMessageFunction(arg1) &&\n        !isMessageAST(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    // prettier-ignore\n    const key = isNumber(arg1)\n        ? String(arg1)\n        : isMessageFunction(arg1)\n            ? arg1\n            : arg1;\n    if (isNumber(arg2)) {\n        options.plural = arg2;\n    }\n    else if (isString(arg2)) {\n        options.default = arg2;\n    }\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n        options.named = arg2;\n    }\n    else if (isArray(arg2)) {\n        options.list = arg2;\n    }\n    if (isNumber(arg3)) {\n        options.plural = arg3;\n    }\n    else if (isString(arg3)) {\n        options.default = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        assign(options, arg3);\n    }\n    return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n    return {\n        locale,\n        key,\n        warnHtmlMessage,\n        onError: (err) => {\n            onError && onError(err);\n            if ((process.env.NODE_ENV !== 'production')) {\n                const _source = getSourceForCodeFrame(source);\n                const message = `Message compilation error: ${err.message}`;\n                const codeFrame = err.location &&\n                    _source &&\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n                const emitter = context.__v_emitter;\n                if (emitter && _source) {\n                    emitter.emit('compile-error', {\n                        message: _source,\n                        error: err.message,\n                        start: err.location && err.location.start.offset,\n                        end: err.location && err.location.end.offset,\n                        groupId: `${'translate'}:${key}`\n                    });\n                }\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n            }\n            else {\n                throw err;\n            }\n        },\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\n    };\n}\nfunction getSourceForCodeFrame(source) {\n    if (isString(source)) {\n        return source;\n    }\n    else {\n        if (source.loc && source.loc.source) {\n            return source.loc.source;\n        }\n    }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\n    const resolveMessage = (key, useLinked) => {\n        let val = resolveValue(message, key);\n        // fallback\n        if (val == null && (fallbackContext || useLinked)) {\n            const [, , message] = resolveMessageFormat(fallbackContext || context, // NOTE: if has fallbackContext, fallback to root, else if use linked, fallback to local context\n            key, locale, fallbackLocale, fallbackWarn, missingWarn);\n            val = resolveValue(message, key);\n        }\n        if (isString(val) || isMessageAST(val)) {\n            let occurred = false;\n            const onError = () => {\n                occurred = true;\n            };\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\n            return !occurred\n                ? msg\n                : NOOP_MESSAGE_FUNCTION;\n        }\n        else if (isMessageFunction(val)) {\n            return val;\n        }\n        else {\n            // TODO: should be implemented warning message\n            return NOOP_MESSAGE_FUNCTION;\n        }\n    };\n    const ctxOptions = {\n        locale,\n        modifiers,\n        pluralRules,\n        messages: resolveMessage\n    };\n    if (context.processor) {\n        ctxOptions.processor = context.processor;\n    }\n    if (options.list) {\n        ctxOptions.list = options.list;\n    }\n    if (options.named) {\n        ctxOptions.named = options.named;\n    }\n    if (isNumber(options.plural)) {\n        ctxOptions.pluralIndex = options.plural;\n    }\n    return ctxOptions;\n}\n\n{\n    initFeatureFlags();\n}\n\nexport { CORE_ERROR_CODES_EXTEND_POINT, CORE_WARN_CODES_EXTEND_POINT, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getLocaleMessage, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, setLocaleMessage, translate, translateDevTools, updateFallbackLocale };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}