{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"language-switcher\"\n};\nconst _hoisted_2 = {\n  class: \"dropdown\"\n};\nconst _hoisted_3 = {\n  class: \"btn btn-outline-dark btn-sm dropdown-toggle d-flex align-items-center\",\n  type: \"button\",\n  id: \"languageDropdown\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n};\nconst _hoisted_4 = {\n  class: \"flag-icon\"\n};\nconst _hoisted_5 = {\n  class: \"dropdown-menu dropdown-menu-end language-menu\",\n  \"aria-labelledby\": \"languageDropdown\"\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($options.currentFlag), 1 /* TEXT */), _createElementVNode(\"span\", {\n    class: _normalizeClass(['language-name', 'd-none', 'd-md-inline', _ctx.$i18n.locale === 'ar' ? 'me-1' : 'ms-1'])\n  }, _toDisplayString(_ctx.$t(`name`)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.languages, lang => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: lang.code\n    }, [_createElementVNode(\"a\", {\n      class: _normalizeClass([\"dropdown-item\", {\n        active: $options.currentLocale === lang.code\n      }]),\n      href: \"#\",\n      onClick: _withModifiers($event => $options.changeLanguage(lang.code), [\"prevent\"])\n    }, _toDisplayString(lang.flag) + \" \" + _toDisplayString(lang.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","type","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$options","currentFlag","_normalizeClass","_ctx","$i18n","locale","$t","_hoisted_5","_Fragment","_renderList","$data","languages","lang","key","code","active","currentLocale","href","onClick","_withModifiers","$event","changeLanguage","flag","name","_hoisted_6"],"sources":["D:\\Hys\\flyboot1\\flyboot\\src\\components\\LanguageSwitcher.vue"],"sourcesContent":["<template>\r\n  <div class=\"language-switcher\">\r\n    <div class=\"dropdown\">\r\n      <button class=\"btn btn-outline-dark btn-sm dropdown-toggle d-flex align-items-center\" type=\"button\" id=\"languageDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n        <span class=\"flag-icon\">{{ currentFlag }}</span>\r\n        <span :class=\"['language-name', 'd-none', 'd-md-inline', $i18n.locale === 'ar' ? 'me-1' : 'ms-1']\">{{ $t(`name`) }}</span>\r\n      </button>\r\n      <ul class=\"dropdown-menu dropdown-menu-end language-menu\" aria-labelledby=\"languageDropdown\">\r\n        <li v-for=\"lang in languages\" :key=\"lang.code\">\r\n          <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"changeLanguage(lang.code)\" \r\n             :class=\"{ active: currentLocale === lang.code }\">\r\n            {{ lang.flag }} {{ lang.name }}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCurrentInstance } from 'vue'\r\n\r\nexport default {\r\n  name: 'LanguageSwitcher',\r\n  setup() {\r\n    return { instance: getCurrentInstance() };\r\n  },\r\n  data() {\r\n    return {\r\n      languages: [\r\n        { code: 'zh', flag: 'üá®üá≥', name: 'ÁÆÄ‰Ωì‰∏≠Êñá' },\r\n        { code: 'zh-hk', flag: 'üá≠üá∞', name: 'ÁπÅÈ´î‰∏≠Êñá' },\r\n        { code: 'en', flag: 'üá∫üá∏', name: 'English' },\r\n        { code: 'fr', flag: 'üá´üá∑', name: 'Fran√ßais' },\r\n        { code: 'es', flag: 'üá™üá∏', name: 'Espa√±ol' },\r\n        { code: 'hi', flag: 'üáÆüá≥', name: '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä' },\r\n        { code: 'ru', flag: 'üá∑üá∫', name: '–†—É—Å—Å–∫–∏–π' },\r\n        { code: 'pt', flag: 'üáßüá∑', name: 'Portugu√™s' },\r\n        { code: 'ar', flag: 'üá∏üá¶', name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©' },\r\n        { code: 'bn', flag: 'üáßüá©', name: '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ' }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    currentLocale() {\r\n      return this.$i18n.locale;\r\n    },\r\n    currentFlag() {\r\n      const lang = this.languages.find(l => l.code === this.currentLocale);\r\n      return lang ? lang.flag : 'üá®üá≥';\r\n    }\r\n  },\r\n  methods: {\r\n    changeLanguage(lang) {\r\n      if (this.currentLocale === lang) return;\r\n      \r\n      this.$i18n.locale = lang;\r\n      localStorage.setItem('locale', lang);\r\n      \r\n      // Â§ÑÁêÜRTLÊñπÂêë\r\n      const isRTL = lang === 'ar';\r\n      document.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');\r\n      document.documentElement.classList.toggle('rtl', isRTL);\r\n      \r\n      // ‰øùÂ≠òÊªöÂä®‰ΩçÁΩÆÂπ∂Ëß¶Âèë‰∫ã‰ª∂\r\n      const scrollPosition = window.scrollY;\r\n      setTimeout(() => {\r\n        this.instance.appContext.config.globalProperties.emitter?.emit('language-changed', lang);\r\n        window.scrollTo(0, scrollPosition);\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.language-switcher {\r\n  display: inline-block;\r\n  position: relative;\r\n  z-index: 1000;\r\n}\r\n\r\n.language-menu {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  z-index: 1050;\r\n}\r\n\r\n.language-menu::-webkit-scrollbar {\r\n  width: 4px;\r\n}\r\n\r\n.language-menu::-webkit-scrollbar-thumb {\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 10px;\r\n}\r\n\r\n.dropdown-item {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 8px 16px;\r\n}\r\n\r\n.dropdown-item.active {\r\n  background-color: #f1f3f6;\r\n  color: var(--accent-color);\r\n  font-weight: 500;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.flag-icon {\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.language-name {\r\n  font-weight: 500;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .language-menu {\r\n    max-height: 250px;\r\n  }\r\n  \r\n  .dropdown-item {\r\n    padding: 6px 12px;\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n\r\n/* RTLÊîØÊåÅ */\r\n:global(.rtl) .dropdown-menu-end {\r\n  right: auto;\r\n  left: 0;\r\n}\r\n\r\n:global(.rtl) .dropdown-item {\r\n  text-align: right;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAU;;EACXA,KAAK,EAAC,uEAAuE;EAACC,IAAI,EAAC,QAAQ;EAACC,EAAE,EAAC,kBAAkB;EAAC,gBAAc,EAAC,UAAU;EAAC,eAAa,EAAC;;;EAC1JF,KAAK,EAAC;AAAW;;EAGrBA,KAAK,EAAC,+CAA+C;EAAC,iBAAe,EAAC;;mBAPhF;;uBACEG,mBAAA,CAeM,OAfNC,UAeM,GAdJC,mBAAA,CAaM,OAbNC,UAaM,GAZJD,mBAAA,CAGS,UAHTE,UAGS,GAFPF,mBAAA,CAAgD,QAAhDG,UAAgD,EAAAC,gBAAA,CAArBC,QAAA,CAAAC,WAAW,kBACtCN,mBAAA,CAA0H;IAAnHL,KAAK,EALpBY,eAAA,4CAKiEC,IAAA,CAAAC,KAAK,CAACC,MAAM;sBAAiCF,IAAA,CAAAG,EAAE,gC,GAE1GX,mBAAA,CAOK,MAPLY,UAOK,I,kBANHd,mBAAA,CAKKe,SAAA,QAbbC,WAAA,CAQ2BC,KAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAfnB,mBAAA,CAKK;MAL0BoB,GAAG,EAAED,IAAI,CAACE;QACvCnB,mBAAA,CAGI;MAHDL,KAAK,EATlBY,eAAA,EASmB,eAAe;QAAAa,MAAA,EACHf,QAAA,CAAAgB,aAAa,KAAKJ,IAAI,CAACE;MAAI;MADvBG,IAAI,EAAC,GAAG;MAAEC,OAAK,EATlDC,cAAA,CAAAC,MAAA,IAS4DpB,QAAA,CAAAqB,cAAc,CAACT,IAAI,CAACE,IAAI;wBAErEF,IAAI,CAACU,IAAI,IAAG,GAAC,GAAAvB,gBAAA,CAAGa,IAAI,CAACW,IAAI,gCAXxCC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}