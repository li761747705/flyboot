{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"language-switcher\"\n};\nconst _hoisted_2 = {\n  class: \"lang-text\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"lang-flag\"\n};\nconst _hoisted_5 = {\n  class: \"lang-name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: _normalizeClass([\"btn language-btn\", $setup.currentClass]),\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.toggleDropdown && $setup.toggleDropdown(...args)),\n    ref: \"langBtn\"\n  }, [_cache[1] || (_cache[1] = _createElementVNode(\"i\", {\n    class: \"bi bi-globe2 me-1\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_2, _toDisplayString($setup.currentLanguage), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"i\", {\n    class: \"bi bi-chevron-down ms-1\"\n  }, null, -1 /* HOISTED */))], 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"language-dropdown\", {\n      'show': $setup.isOpen\n    }]),\n    ref: \"langDropdown\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.languages, lang => {\n    return _openBlock(), _createElementBlock(\"a\", {\n      key: lang.code,\n      class: _normalizeClass([\"language-item\", {\n        'active': $setup.currentLocale === lang.code\n      }]),\n      href: \"#\",\n      onClick: _withModifiers($event => $setup.changeLanguage(lang.code), [\"prevent\"])\n    }, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(lang.flag), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(lang.name), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$setup","currentClass","onClick","_cache","args","toggleDropdown","ref","_hoisted_2","_toDisplayString","currentLanguage","isOpen","_Fragment","_renderList","languages","lang","key","code","currentLocale","href","_withModifiers","$event","changeLanguage","_hoisted_4","flag","_hoisted_5","name","_hoisted_3"],"sources":["C:\\Users\\Administrator\\Desktop\\flyboot\\src\\components\\LanguageSwitcher.vue"],"sourcesContent":["<template>\r\n  <div class=\"language-switcher\">\r\n    <button \r\n      class=\"btn language-btn\" \r\n      :class=\"currentClass\" \r\n      @click=\"toggleDropdown\"\r\n      ref=\"langBtn\"\r\n    >\r\n      <i class=\"bi bi-globe2 me-1\"></i>\r\n      <span class=\"lang-text\">{{ currentLanguage }}</span>\r\n      <i class=\"bi bi-chevron-down ms-1\"></i>\r\n    </button>\r\n    <div class=\"language-dropdown\" :class=\"{ 'show': isOpen }\" ref=\"langDropdown\">\r\n      <a \r\n        v-for=\"lang in languages\" \r\n        :key=\"lang.code\" \r\n        class=\"language-item\" \r\n        href=\"#\" \r\n        @click.prevent=\"changeLanguage(lang.code)\"\r\n        :class=\"{ 'active': currentLocale === lang.code }\"\r\n      >\r\n        <span class=\"lang-flag\">{{ lang.flag }}</span>\r\n        <span class=\"lang-name\">{{ lang.name }}</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { useI18n } from 'vue-i18n'\r\n\r\nexport default {\r\n  name: 'LanguageSwitcher',\r\n  setup() {\r\n    const { locale } = useI18n()\r\n    const isOpen = ref(false)\r\n    const langBtn = ref(null)\r\n    const langDropdown = ref(null)\r\n    \r\n    const languages = [\r\n      { code: 'zh', name: '中文', flag: '🇨🇳' },\r\n      { code: 'en', name: 'English', flag: '🇺🇸' },\r\n      { code: 'fr', name: 'Français', flag: '🇫🇷' },\r\n      { code: 'es', name: 'Español', flag: '🇪🇸' },\r\n      { code: 'hi', name: 'हिन्दी', flag: '🇮🇳' },\r\n      { code: 'bn', name: 'বাংলা', flag: '🇧🇩' },\r\n      { code: 'ru', name: 'Русский', flag: '🇷🇺' },\r\n      { code: 'pt', name: 'Português', flag: '🇧🇷' }\r\n    ]\r\n    \r\n    const currentLocale = computed(() => locale.value)\r\n    \r\n    const currentLanguage = computed(() => {\r\n      const lang = languages.find(l => l.code === locale.value)\r\n      return lang ? `${lang.flag} ${lang.name}` : ''\r\n    })\r\n    \r\n    const currentClass = computed(() => {\r\n      return {\r\n        'btn-outline-light': true\r\n      }\r\n    })\r\n    \r\n    const toggleDropdown = () => {\r\n      isOpen.value = !isOpen.value\r\n    }\r\n    \r\n    const changeLanguage = (code) => {\r\n      locale.value = code\r\n      localStorage.setItem('locale', code)\r\n      isOpen.value = false\r\n    }\r\n    \r\n    const closeDropdown = (event) => {\r\n      if (langBtn.value && !langBtn.value.contains(event.target) && \r\n          langDropdown.value && !langDropdown.value.contains(event.target)) {\r\n        isOpen.value = false\r\n      }\r\n    }\r\n    \r\n    onMounted(() => {\r\n      document.addEventListener('click', closeDropdown)\r\n    })\r\n    \r\n    onUnmounted(() => {\r\n      document.removeEventListener('click', closeDropdown)\r\n    })\r\n    \r\n    return {\r\n      isOpen,\r\n      languages,\r\n      currentLocale,\r\n      currentLanguage,\r\n      currentClass,\r\n      toggleDropdown,\r\n      changeLanguage,\r\n      langBtn,\r\n      langDropdown\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.language-switcher {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.language-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 12px;\r\n  font-size: 0.9rem;\r\n  border-radius: 30px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.language-dropdown {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  z-index: 1000;\r\n  min-width: 160px;\r\n  padding: 8px 0;\r\n  margin-top: 5px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.15);\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transform: translateY(10px);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.language-dropdown.show {\r\n  opacity: 1;\r\n  visibility: visible;\r\n  transform: translateY(0);\r\n}\r\n\r\n.language-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  color: #333;\r\n  text-decoration: none;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.language-item:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.language-item.active {\r\n  background-color: #f0f0f0;\r\n  color: #2D0A81;\r\n  font-weight: 500;\r\n}\r\n\r\n.lang-flag {\r\n  margin-right: 8px;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.lang-name {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .lang-text {\r\n    display: none;\r\n  }\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;EAQpBA,KAAK,EAAC;AAAW;mBAT7B;;EAqBcA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;uBArB7BC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJC,mBAAA,CASS;IARPH,KAAK,EAHXI,eAAA,EAGY,kBAAkB,EAChBC,MAAA,CAAAC,YAAY;IACnBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,MAAA,CAAAK,cAAA,IAAAL,MAAA,CAAAK,cAAA,IAAAD,IAAA,CAAc;IACtBE,GAAG,EAAC;gCAEJR,mBAAA,CAAiC;IAA9BH,KAAK,EAAC;EAAmB,6BAC5BG,mBAAA,CAAoD,QAApDS,UAAoD,EAAAC,gBAAA,CAAzBR,MAAA,CAAAS,eAAe,kB,0BAC1CX,mBAAA,CAAuC;IAApCH,KAAK,EAAC;EAAyB,4B,kBAEpCG,mBAAA,CAYM;IAZDH,KAAK,EAZdI,eAAA,EAYe,mBAAmB;MAAA,QAAmBC,MAAA,CAAAU;IAAM;IAAIJ,GAAG,EAAC;yBAC7DV,mBAAA,CAUIe,SAAA,QAvBVC,WAAA,CAcuBZ,MAAA,CAAAa,SAAS,EAAjBC,IAAI;yBADblB,mBAAA,CAUI;MARDmB,GAAG,EAAED,IAAI,CAACE,IAAI;MACfrB,KAAK,EAhBbI,eAAA,EAgBc,eAAe;QAAA,UAGDC,MAAA,CAAAiB,aAAa,KAAKH,IAAI,CAACE;MAAI;MAF/CE,IAAI,EAAC,GAAG;MACPhB,OAAK,EAlBdiB,cAAA,CAAAC,MAAA,IAkBwBpB,MAAA,CAAAqB,cAAc,CAACP,IAAI,CAACE,IAAI;QAGxClB,mBAAA,CAA8C,QAA9CwB,UAA8C,EAAAd,gBAAA,CAAnBM,IAAI,CAACS,IAAI,kBACpCzB,mBAAA,CAA8C,QAA9C0B,UAA8C,EAAAhB,gBAAA,CAAnBM,IAAI,CAACW,IAAI,iB,yBAtB5CC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}