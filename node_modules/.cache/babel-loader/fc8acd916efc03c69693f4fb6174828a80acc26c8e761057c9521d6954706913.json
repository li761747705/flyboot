{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { ref, computed, onMounted, nextTick } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { SUPPORTED_LOCALES, setLocale } from '@/i18n';\nexport default {\n  name: 'LanguageSwitcher',\n  setup() {\n    const {\n      locale\n    } = useI18n();\n    const currentLocale = computed(() => locale.value);\n    const supportedLocales = ref(SUPPORTED_LOCALES);\n\n    // 切换语言\n    const changeLocale = async code => {\n      if (code !== currentLocale.value) {\n        // 先设置Vue I18n实例的语言\n        locale.value = code;\n        debugger;\n        // 再使用自定义的setLocale函数设置HTML属性和保存到localStorage\n        setLocale(code);\n\n        // 等待下一个DOM更新周期\n        await nextTick();\n\n        // 强制所有组件重新渲染以更新翻译\n        const event = new Event('languageChanged');\n        window.dispatchEvent(event);\n      }\n    };\n\n    // 获取当前语言名称\n    const getCurrentLanguageName = () => {\n      const current = supportedLocales.value.find(l => l.code === currentLocale.value);\n      return current ? current.name : '语言';\n    };\n\n    // 组件挂载时确保语言设置正确\n    onMounted(() => {\n      const savedLocale = localStorage.getItem('locale') || 'zh-CN';\n      if (currentLocale.value !== savedLocale) {\n        changeLocale(savedLocale);\n      }\n    });\n    return {\n      currentLocale,\n      supportedLocales,\n      changeLocale,\n      getCurrentLanguageName\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","nextTick","useI18n","SUPPORTED_LOCALES","setLocale","name","setup","locale","currentLocale","value","supportedLocales","changeLocale","code","event","Event","window","dispatchEvent","getCurrentLanguageName","current","find","l","savedLocale","localStorage","getItem"],"sources":["C:\\Users\\Administrator\\Desktop\\flyboot\\src\\components\\LanguageSwitcher.vue"],"sourcesContent":["<template>\r\n  <div class=\"language-switcher\">\r\n    <div class=\"dropdown\">\r\n      <button \r\n        class=\"btn btn-link dropdown-toggle text-decoration-none text-white\" \r\n        type=\"button\" \r\n        id=\"languageDropdown\" \r\n        data-bs-toggle=\"dropdown\" \r\n        aria-expanded=\"false\"\r\n      >\r\n        <i class=\"bi bi-globe me-1\"></i> {{ getCurrentLanguageName() }}\r\n      </button>\r\n      <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"languageDropdown\">\r\n        <li v-for=\"locale in supportedLocales\" :key=\"locale.code\">\r\n          <a \r\n            class=\"dropdown-item\" \r\n            href=\"#\" \r\n            @click.prevent=\"changeLocale(locale.code)\"\r\n            :class=\"{ active: currentLocale === locale.code }\"\r\n          >\r\n            {{ locale.name }}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, nextTick } from 'vue'\r\nimport { useI18n } from 'vue-i18n'\r\nimport { SUPPORTED_LOCALES, setLocale } from '@/i18n'\r\n\r\nexport default {\r\n  name: 'LanguageSwitcher',\r\n  setup() {\r\n    const { locale } = useI18n()\r\n    const currentLocale = computed(() => locale.value)\r\n    const supportedLocales = ref(SUPPORTED_LOCALES)\r\n    \r\n    // 切换语言\r\n    const changeLocale = async (code) => {\r\n      if (code !== currentLocale.value) {\r\n        // 先设置Vue I18n实例的语言\r\n        locale.value = code\r\n        debugger\r\n        // 再使用自定义的setLocale函数设置HTML属性和保存到localStorage\r\n        setLocale(code)\r\n        \r\n        // 等待下一个DOM更新周期\r\n        await nextTick()\r\n        \r\n        // 强制所有组件重新渲染以更新翻译\r\n        const event = new Event('languageChanged')\r\n        window.dispatchEvent(event)\r\n      }\r\n    }\r\n    \r\n    // 获取当前语言名称\r\n    const getCurrentLanguageName = () => {\r\n      const current = supportedLocales.value.find(l => l.code === currentLocale.value)\r\n      return current ? current.name : '语言'\r\n    }\r\n    \r\n    // 组件挂载时确保语言设置正确\r\n    onMounted(() => {\r\n      const savedLocale = localStorage.getItem('locale') || 'zh-CN'\r\n      if (currentLocale.value !== savedLocale) {\r\n        changeLocale(savedLocale)\r\n      }\r\n    })\r\n    \r\n    return {\r\n      currentLocale,\r\n      supportedLocales,\r\n      changeLocale,\r\n      getCurrentLanguageName\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.language-switcher {\r\n  position: relative;\r\n  z-index: 1000;\r\n}\r\n\r\n.dropdown-menu {\r\n  min-width: 150px;\r\n  padding: 0.5rem 0;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.dropdown-item {\r\n  padding: 0.5rem 1rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.dropdown-item.active,\r\n.dropdown-item:active {\r\n  background-color: #2D0A81;\r\n  color: white;\r\n}\r\n\r\n/* RTL支持 */\r\n:global(.rtl) .me-1 {\r\n  margin-right: 0 !important;\r\n  margin-left: 0.25rem !important;\r\n}\r\n\r\n:global(.rtl) .dropdown-menu-end {\r\n  right: auto;\r\n  left: 0;\r\n}\r\n</style> "],"mappings":";;AA6BA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAI;AACvD,SAASC,OAAM,QAAS,UAAS;AACjC,SAASC,iBAAiB,EAAEC,SAAQ,QAAS,QAAO;AAEpD,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAKA,CAAA,EAAG;IACN,MAAM;MAAEC;IAAO,IAAIL,OAAO,CAAC;IAC3B,MAAMM,aAAY,GAAIT,QAAQ,CAAC,MAAMQ,MAAM,CAACE,KAAK;IACjD,MAAMC,gBAAe,GAAIZ,GAAG,CAACK,iBAAiB;;IAE9C;IACA,MAAMQ,YAAW,GAAI,MAAOC,IAAI,IAAK;MACnC,IAAIA,IAAG,KAAMJ,aAAa,CAACC,KAAK,EAAE;QAChC;QACAF,MAAM,CAACE,KAAI,GAAIG,IAAG;QAClB;QACA;QACAR,SAAS,CAACQ,IAAI;;QAEd;QACA,MAAMX,QAAQ,CAAC;;QAEf;QACA,MAAMY,KAAI,GAAI,IAAIC,KAAK,CAAC,iBAAiB;QACzCC,MAAM,CAACC,aAAa,CAACH,KAAK;MAC5B;IACF;;IAEA;IACA,MAAMI,sBAAqB,GAAIA,CAAA,KAAM;MACnC,MAAMC,OAAM,GAAIR,gBAAgB,CAACD,KAAK,CAACU,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACR,IAAG,KAAMJ,aAAa,CAACC,KAAK;MAC/E,OAAOS,OAAM,GAAIA,OAAO,CAACb,IAAG,GAAI,IAAG;IACrC;;IAEA;IACAL,SAAS,CAAC,MAAM;MACd,MAAMqB,WAAU,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,KAAK,OAAM;MAC5D,IAAIf,aAAa,CAACC,KAAI,KAAMY,WAAW,EAAE;QACvCV,YAAY,CAACU,WAAW;MAC1B;IACF,CAAC;IAED,OAAO;MACLb,aAAa;MACbE,gBAAgB;MAChBC,YAAY;MACZM;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}